<project name="alfresco"
         default="build-tomcat" >
   <dirname property="alfresco.basedir" file="${ant.file.alfresco}"/>
   <property name="buildproperties.location" value="community"/>


   <!-- ****************************************************** -->
   <!-- ************ Initialisation/Configuration ************ -->
   <!-- ****************************************************** -->

   <import file="${alfresco.basedir}/macros.xml" />
   <import file="${alfresco.basedir}/projects.xml" />

   <!-- For support of the script tag (Ant 1.6 fails to load the BSF or -->
   <!-- JSR-223 jars from anywhere other than the ant lib directory) -->
   <fail message="Ant 1.7 or higher is required to build. ${ant.version} detected">
     <!-- antversion tag not available in 1.6 which is unhelpful -->
     <condition><contains string="${ant.version}" substring="1.6." /></condition>
   </fail>
   <fail message="Ant 1.7 or higher is required to build. ${ant.version} detected">
     <condition><not><antversion atleast="1.7" /></not></condition>
   </fail>
   <fail message="Java 7 is required to build. ${java.version} detected">
     <condition><not><contains string="${java.version}" substring="1.7"/></not></condition>
   </fail>

   <target name="init">
      <property environment="env" />
      <tstamp/>

      <!-- 
            On UNIX, it's considered very poor form to dump a config file that
            does not start with "." into the user's $HOME directory.  

            On Windows, it's a bit more debatable, but in any event Alfresco 
            config files should always start with "alfresco-...", so the current
            prop file convention needs to be fixed no matter how you slice it.  
            The conditional below is intended to make the transition more graceful 
            until we re-work the build.  
      -->
      <condition property = "alfresco.user.override.properties.file"
                 value    = "${user.home}/.alfresco-user-override.properties"
                 else     = "${user.home}/user-override.properties">
          <available file = "${user.home}/.alfresco-user-override.properties"/>
      </condition>
      <property file      = "${alfresco.user.override.properties.file}" />

      <property file="${alfresco.basedir}/projects/repository/config/alfresco/version.properties" />
      <property file="${alfresco.basedir}/${buildproperties.location}.properties"/>
      <property file="${alfresco.basedir}/build.properties" />
      <property file="${alfresco.basedir}/shared.properties" />
      
      <echo>user.home = ${user.home}</echo>
      <echo>version.number = ${version.number}</echo>

      <path id="classpath.compile">
         <fileset dir="${dir.project.3rdparty.lib}">
            <include name="**/*.jar" />
            <exclude name="devenv/*.jar" />
         </fileset>
         <fileset dir="${dir.projects}">
            <include name="**/${dir.name.build}/${dir.name.dist}/*.jar" />
         </fileset>
         <fileset dir="${dir.modules}">
            <include name="**/${dir.name.lib}/*.jar" />
            <exclude name="wcmquickstart/wcmquickstartwebapp/**" />
            <exclude name="wcmquickstart/wcmquickstartwebsite/${dir.name.build}/**" />
         </fileset>
         <fileset dir="${dir.modules}">
            <include name="**/${dir.name.build}/${dir.name.dist}/*.jar" />
         </fileset>
         <fileset dir="${dir.project.3rdparty.lib}">
            <include name="devenv/*.jar" />
         </fileset>
      </path>
     <!-- Extension point for overriding -->
      <path id="classpath.compile.extension"/>

      <path id="classpath.compile.solr">
         <fileset dir="${dir.project.solr.lib}">
            <include name="**/*.jar" />
         </fileset>
      </path>
      <path id="classpath.compile.system-build-test">
         <fileset dir="${dir.project.system-build-test.lib}">
            <include name="**/*.jar" />
         </fileset>
      </path>
      <path id="classpath.unit.test">
         <pathelement location="${user.home}" />
         <pathelement location="${dir.project.core.classes}" />
         <pathelement location="${dir.project.core.classes.test}" />
         <pathelement location="${dir.project.core.src.java}" />
         <pathelement location="${dir.project.datamodel.classes}" />
         <pathelement location="${dir.project.datamodel.classes.test}" />
         <pathelement location="${dir.project.datamodel.test.resources}" />
         <pathelement location="${dir.project.legacylucene.classes}" />
         <pathelement location="${dir.project.legacylucene.classes.test}" />
         <pathelement location="${dir.project.jlan.classes}" />
         <pathelement location="${dir.project.mbeans.classes}" />
         <pathelement location="${dir.project.deployment.classes}" />
         <pathelement location="${dir.project.deployment.classes.test}" />
         <pathelement location="${dir.project.repository.classes}" />
         <pathelement location="${dir.project.repository.classes.test}" />
         <pathelement location="${dir.project.wdrdeployment.classes}" />
         <pathelement location="${dir.project.wdrdeployment.classes.test}" />
         <pathelement location="${dir.project.3rdparty.lib}/junit-dep-4.11.jar" />
         
         <pathelement location="${dir.project.datamodel.config}" />
         <pathelement location="${dir.project.repository.config}" />
         <pathelement location="${dir.project.deployment.config}" />
         
         <pathelement location="${dir.project.core}/${dir.name.source}/${dir.name.test.resources}" />
         <pathelement location="${dir.project.repository}/${dir.name.source}/${dir.name.test.resources}" />
         <pathelement location="${dir.project.wdrdeployment}/${dir.name.source}/${dir.name.test.resources}" />
      </path>

      <path id="classpath.unit.test.beyondrepo">
         <pathelement location="${dir.project.jndi.classes}" />
         <pathelement location="${dir.project.catalinavirtual.classes}" />
         <pathelement location="${dir.project.remoteapi.classes}" />
         <pathelement location="${dir.project.remoteapi.classes.test}" />
         <pathelement location="${dir.project.solrclient.classes}" />
         <pathelement location="${dir.project.solrclient.classes.test}" />
         <pathelement location="${dir.project.system-build-test.classes}" />
         <pathelement location="${dir.project.webframeworkcommons.classes}" />
         <pathelement location="${dir.project.webframeworkcommons.classes.test}" />
         <pathelement location="${dir.project.webclient.classes}" />
         <pathelement location="${dir.project.webclient.classes.test}" />
         <pathelement location="${dir.project.webserviceclient.classes}" />
         <pathelement location="${dir.project.webserviceclient.classes.test}" />

         <pathelement location="${dir.project.remoteapi.config}" />
         <pathelement location="${dir.project.webclient.config}" />

         <pathelement location="${dir.project.remoteapi}/${dir.name.source}/${dir.name.test.resources}" />
         <pathelement location="${dir.project.webclient}/${dir.name.source}/${dir.name.test.resources}" />
         <pathelement location="${dir.project.webserviceclient}/${dir.name.source}/${dir.name.test.resources}" />
      </path>

      <!-- Add on all the 3rd party libs based on the eclipse project -->
      <!-- Includes libs that are both exported and non-exported -->
      <script language="javascript" classpath="${classpath.bsf_javascript}"> <![CDATA[
         importClass(java.util.regex.Matcher);
         importClass(java.util.regex.Pattern);
         importClass(java.io.File);
         importClass(java.io.FileInputStream);
         importClass(java.io.InputStreamReader);
         importClass(java.io.BufferedReader);

         var path = project.getReference("classpath.unit.test");
         var projPath = project.getProperty("dir.project.3rdparty") + "/";

         var is_entry = Pattern.compile("[ \t]*\<classpathentry.*?");
         //is_exported = Pattern.compile("[ \t]*\<classpathentry.*? exported=[\"\']true[\"\'][ \/].*");
         var is_lib = Pattern.compile(".*? kind=[\"\']lib[\"\'][ \/].*?");
         var get_path = Pattern.compile(".*? path=[\"\'](.*?)[\"\'][ \/].*?");

         var f = new BufferedReader(new InputStreamReader(
                 new FileInputStream(new File(projPath + ".classpath"))
         ));
         var line;
         while( (line = f.readLine()) != null ) {
            if( is_entry.matcher(line).matches() &&
                     is_lib.matcher(line).matches()) {
               var m = get_path.matcher(line);
               if(m.matches()) {
                  var this_path = m.group(1);
                  if(! this_path.startsWith("lib/ant-1.")) {
                     var pe = path.createPathElement();
                     pe.setLocation(new File(projPath+this_path));
                  }
               }
            }
         }
      ]]></script>

     <!-- Extension point for overriding -->
      <path id="classpath.unit.test.extension"/>

      <path id="classpath.javadoc">
         <path refid="classpath.compile"/>
      </path>
     <!-- Extension point for overriding -->
      <path id="classpath.javadoc.extension"/>

      <patternset id="files.tests.startup">
         <include name="**/RepositoryStartupTest.java" />
      </patternset>
      <patternset id="files.tests">
         <!-- System Build Tests (runs using embedded Jetty) -->
         <exclude name="**/*SystemTest.java" />

         <exclude name="**/Base*Test.java" />
         <exclude name="**/Abstract*Test.java" />
         <exclude name="**/RepositoryStartupTest.java" />
         <exclude name="**/IndexCheckServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/web/scripts/publishing/PublishingRestApiTest.java" />

         <include name="**/org/alfresco/repo/MiscSystemTestSuite.java" />
         <include name="**/org/alfresco/repo/SolrClientTestSuite.java" />
         <exclude name="**/org/alfresco/repo/solr/EmbeddedSolrTest.java" />


         <!-- Exclude tests that require JodConverter/OpenOffice.org as these are hanging the build server -->
         <exclude name="**/*OOoTest.java" />

         <!-- Repo Tests -->
         <include name="**/org/alfresco/Repository*TestSuite.java" />
		 <!-- Exclude all the test classes that are run one by one -->
         <exclude name="**/org/alfresco/RepositoryStartStopTest.java" />
         <exclude name="**/org/alfresco/cmis/PropertyFilterTest.java" />
         <exclude name="**/org/alfresco/cmis/acl/CMISAccessControlServiceTest.java" />
         <exclude name="**/org/alfresco/cmis/dictionary/CMISDictionaryTest.java" />
         <exclude name="**/org/alfresco/cmis/mapping/CMISPropertyServiceTest.java" />
         <exclude name="**/org/alfresco/cmis/renditions/CMISRenditionServiceTest.java" />
         <exclude name="**/org/alfresco/cmis/search/QueryTest.java" />
         <exclude name="**/org/alfresco/email/server/EmailServiceImplTest.java" />
         <exclude name="**/org/alfresco/encryption/EncryptorTest.java" />
         <exclude name="**/org/alfresco/encryption/KeyStoreKeyProviderTest.java" />
         <exclude name="**/org/alfresco/filesys/FTPServerTest.java" />
         <exclude name="**/org/alfresco/filesys/config/ServerConfigurationBeanTest.java" />
         <exclude name="**/org/alfresco/filesys/repo/CIFSContentComparatorTest.java" />
         <exclude name="**/org/alfresco/filesys/repo/CifsIntegrationTest.java" />
         <exclude name="**/org/alfresco/filesys/repo/ContentDiskDriverTest.java" />
         <exclude name="**/org/alfresco/filesys/repo/LockKeeperImplTest.java" />
         <exclude name="**/org/alfresco/filesys/repo/rules/ShuffleTest.java" />
         <exclude name="**/org/alfresco/jcr/importer/ImportTest.java" />
         <exclude name="**/org/alfresco/jcr/item/Alf1791Test.java" />
         <exclude name="**/org/alfresco/jcr/item/ItemTest.java" />
         <exclude name="**/org/alfresco/jcr/query/QueryManagerImplTest.java" />
         <exclude name="**/org/alfresco/jcr/repository/RepositoryImplTest.java" />
         <exclude name="**/org/alfresco/jcr/session/SessionImplTest.java" />
         <exclude name="**/org/alfresco/opencmis/CMISTest.java" />
         <exclude name="**/org/alfresco/opencmis/OpenCmisLocalTest.java" />
         <exclude name="**/org/alfresco/opencmis/search/OpenCmisQueryTest.java" />
         <exclude name="**/org/alfresco/repo/action/ActionTestSuite.java" />
         <exclude name="**/org/alfresco/repo/activities/ActivityServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/activities/feed/FeedNotifierTest.java" />
         <exclude name="**/org/alfresco/repo/admin/Log4JHierarchyInitTest.java" />
         <exclude name="**/org/alfresco/repo/admin/RepoAdminServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/admin/patch/PatchTest.java" />
         <exclude name="**/org/alfresco/repo/admin/registry/RegistryServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/attributes/AttributeServiceTest.java" />
         <exclude name="**/org/alfresco/repo/audit/AuditTestSuite.java" />
         <exclude name="**/org/alfresco/repo/blog/BlogServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/bulkimport/impl/BulkImportTest.java" />
         <exclude name="**/org/alfresco/repo/bulkimport/impl/StripingFilesystemTrackerTest.java" />
         <exclude name="**/org/alfresco/repo/cache/CacheTest.java" />
         <exclude name="**/org/alfresco/repo/cache/DefaultCacheFactoryTest.java" />
         <exclude name="**/org/alfresco/repo/cache/DefaultSimpleCacheTest.java" />
         <exclude name="**/org/alfresco/repo/cache/lookup/EntityLookupCacheTest.java" />
         <exclude name="**/org/alfresco/repo/calendar/CalendarHelpersTest.java" />
         <exclude name="**/org/alfresco/repo/calendar/CalendarServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/coci/CheckOutCheckInServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/configuration/ConfigurableServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/content/ContentFullContextTestSuite.java" />
         <exclude name="**/org/alfresco/repo/content/ContentMinimalContextTestSuite.java" />
         <exclude name="**/org/alfresco/repo/content/caching/CachingContentStoreTestSuite.java" />
         <exclude name="**/org/alfresco/repo/copy/CopyServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/deploy/DeploymentServiceTest.java" />
         <exclude name="**/org/alfresco/repo/descriptor/DescriptorServiceTest.java" />
         <exclude name="**/org/alfresco/repo/dictionary/DictionaryModelTypeTest.java" />
         <exclude name="**/org/alfresco/repo/dictionary/DictionaryRepositoryBootstrapTest.java" />
         <exclude name="**/org/alfresco/repo/dictionary/RepoDictionaryDAOTest.java" />
         <exclude name="**/org/alfresco/repo/dictionary/types/period/PeriodTest.java" />
         <exclude name="**/org/alfresco/repo/discussion/DiscussionServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/domain/DomainTestSuite.java" />
         <exclude name="**/org/alfresco/repo/download/DownloadServiceIntegrationTest.java" />
         <exclude name="**/org/alfresco/repo/exporter/ExporterComponentTest.java" />
         <exclude name="**/org/alfresco/repo/exporter/RepositoryExporterComponentTest.java" />
         <exclude name="**/org/alfresco/repo/forms/FormServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/forms/processor/action/ActionFormProcessorTest.java" />
         <exclude name="**/org/alfresco/repo/forms/processor/node/FieldProcessorTest.java" />
         <exclude name="**/org/alfresco/repo/forms/processor/workflow/TaskFormProcessorTest.java" />
         <exclude name="**/org/alfresco/repo/forms/processor/workflow/WorkflowFormProcessorTest.java" />
         <exclude name="**/org/alfresco/repo/forum/CommentsTest.java" />
         <exclude name="**/org/alfresco/repo/i18n/MessageServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/imap/ImapMessageTest.java" />
         <exclude name="**/org/alfresco/repo/imap/ImapServiceImplCacheTest.java" />
         <exclude name="**/org/alfresco/repo/imap/ImapServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/importer/FileImporterTest.java" />
         <exclude name="**/org/alfresco/repo/importer/ImporterComponentTest.java" />
         <exclude name="**/org/alfresco/repo/invitation/InvitationCleanupTest.java" />
         <exclude name="**/org/alfresco/repo/invitation/site/InviteSenderTest.java" />
         <exclude name="**/org/alfresco/repo/jscript/PeopleTest.java" />
         <exclude name="**/org/alfresco/repo/jscript/RhinoScriptTest.java" />
         <exclude name="**/org/alfresco/repo/jscript/ScriptBehaviourTest.java" />
         <exclude name="**/org/alfresco/repo/jscript/ScriptNodeTest.java" />
         <exclude name="**/org/alfresco/repo/links/LinksServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/lock/JobLockServiceTest.java" />
         <exclude name="**/org/alfresco/repo/lock/LockBehaviourImplTest.java" />
         <exclude name="**/org/alfresco/repo/lock/LockServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/lock/LockUtilsTest.java" />
         <exclude name="**/org/alfresco/repo/lock/mem/LockStoreImplTest.java" />
         <exclude name="**/org/alfresco/repo/lock/mem/LockStoreImplTxTest.java" />
         <exclude name="**/org/alfresco/repo/lock/mem/LockableAspectInterceptorTest.java" />
         <exclude name="**/org/alfresco/repo/management/JmxDumpUtilTest.java" />
         <exclude name="**/org/alfresco/repo/model/ModelTestSuite.java" />
         <exclude name="**/org/alfresco/repo/module/ComponentsTest.java" />
         <exclude name="**/org/alfresco/repo/module/ModuleComponentHelperTest.java" />
         <exclude name="**/org/alfresco/repo/module/ModuleDetailsImplTest.java" />
         <exclude name="**/org/alfresco/repo/module/tool/ModuleManagementToolTest.java" />
         <exclude name="**/org/alfresco/repo/module/tool/WarHelperImplTest.java" />
         <exclude name="**/org/alfresco/repo/node/ConcurrentNodeServiceSearchTest.java" />
         <exclude name="**/org/alfresco/repo/node/ConcurrentNodeServiceTest.java" />
         <exclude name="**/org/alfresco/repo/node/FullNodeServiceTest.java" />
         <exclude name="**/org/alfresco/repo/node/NodeRefPropertyMethodInterceptorTest.java" />
         <exclude name="**/org/alfresco/repo/node/NodeServiceTest.java" />
         <exclude name="**/org/alfresco/repo/node/PerformanceNodeServiceTest.java" />
         <exclude name="**/org/alfresco/repo/node/archive/ArchiveAndRestoreTest.java" />
         <exclude name="**/org/alfresco/repo/node/archive/LargeArchiveAndRestoreTest.java" />
         <exclude name="**/org/alfresco/repo/node/cleanup/TransactionCleanupTest.java" />
         <exclude name="**/org/alfresco/repo/node/db/DbNodeServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/node/getchildren/GetChildrenCannedQueryTest.java" />
         <exclude name="**/org/alfresco/repo/node/index/FullIndexRecoveryComponentTest.java" />
         <exclude name="**/org/alfresco/repo/node/index/IndexTransactionTrackerTest.java" />
         <exclude name="**/org/alfresco/repo/node/index/MissingContentReindexComponentTest.java" />
         <exclude name="**/org/alfresco/repo/node/integrity/IncompleteNodeTaggerTest.java" />
         <exclude name="**/org/alfresco/repo/node/integrity/IntegrityEventTest.java" />
         <exclude name="**/org/alfresco/repo/node/integrity/IntegrityTest.java" />
         <exclude name="**/org/alfresco/repo/nodelocator/NodeLocatorServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/oauth1/OAuth1CredentialsStoreServiceTest.java" />
         <exclude name="**/org/alfresco/repo/oauth2/OAuth2CredentialsStoreServiceTest.java" />
         <exclude name="**/org/alfresco/repo/policy/MTPolicyComponentTest.java" />
         <exclude name="**/org/alfresco/repo/policy/PolicyComponentTest.java" />
         <exclude name="**/org/alfresco/repo/policy/PolicyComponentTransactionTest.java" />
         <exclude name="**/org/alfresco/repo/preference/PreferenceServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/publishing/WebPublishingTestSuite.java" />
         <exclude name="**/org/alfresco/repo/quickshare/QuickShareServiceIntegrationTest.java" />
         <exclude name="**/org/alfresco/repo/rating/RatingServiceIntegrationTest.java" />
         <exclude name="**/org/alfresco/repo/remotecredentials/RemoteCredentialsServicesTest.java" />
         <exclude name="**/org/alfresco/repo/rendition/MultiUserRenditionTest.java" />
         <exclude name="**/org/alfresco/repo/rendition/RenditionNodeManagerTest.java" />
         <exclude name="**/org/alfresco/repo/rendition/RenditionServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/rendition/RenditionServiceIntegrationTest.java" />
         <exclude name="**/org/alfresco/repo/rendition/RenditionServicePermissionsTest.java" />
         <exclude name="**/org/alfresco/repo/rendition/StandardRenditionLocationResolverTest.java" />
         <exclude name="**/org/alfresco/repo/rendition/executer/HTMLRenderingEngineTest.java" />
         <exclude name="**/org/alfresco/repo/rendition/executer/XSLTFunctionsTest.java" />
         <exclude name="**/org/alfresco/repo/rendition/executer/XSLTRenderingEngineTest.java" />
         <exclude name="**/org/alfresco/repo/replication/ReplicationServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/replication/ReplicationServiceIntegrationTest.java" />
         <exclude name="**/org/alfresco/repo/rule/MiscellaneousRulesTest.java" />
         <exclude name="**/org/alfresco/repo/rule/RuleLinkTest.java" />
         <exclude name="**/org/alfresco/repo/rule/RuleServiceCoverageTest.java" />
         <exclude name="**/org/alfresco/repo/rule/RuleServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/rule/RuleServiceIntegrationTest.java" />
         <exclude name="**/org/alfresco/repo/rule/RuleTypeImplTest.java" />
         <exclude name="**/org/alfresco/repo/rule/ruletrigger/RuleTriggerTest.java" />
         <exclude name="**/org/alfresco/repo/search/SearchTestSuite.java" />
         <exclude name="**/org/alfresco/repo/security/SecurityTestSuite.java" />
         <exclude name="**/org/alfresco/repo/security/sync/ChainingUserRegistrySynchronizerTest.java" />
         <exclude name="**/org/alfresco/repo/service/StoreRedirectorProxyFactoryTest.java" />
         <exclude name="**/org/alfresco/repo/site/RoleComparatorImplTest.java" />
         <exclude name="**/org/alfresco/repo/site/SiteServiceImplMoreTest.java" />
         <exclude name="**/org/alfresco/repo/site/SiteServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/solr/SOLRTrackingComponentTest.java" />
         <exclude name="**/org/alfresco/repo/subscriptions/SubscriptionServiceActivitiesTest.java" />
         <exclude name="**/org/alfresco/repo/subscriptions/SubscriptionServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/tagging/TaggingServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/template/TemplateServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/template/XSLTProcessorTest.java" />
         <exclude name="**/org/alfresco/repo/tenant/MultiTDemoTest.java" />
         <exclude name="**/org/alfresco/repo/tenant/MultiTServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/tenant/MultiTNodeServiceInterceptorTest.java" />
         <exclude name="**/org/alfresco/repo/thumbnail/ThumbnailServiceImplParameterTest.java" />
         <exclude name="**/org/alfresco/repo/thumbnail/ThumbnailServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/thumbnail/conditions/NodeEligibleForRethumbnailingEvaluatorTest.java" />
         <exclude name="**/org/alfresco/repo/transaction/AlfrescoTransactionSupportTest.java" />
         <exclude name="**/org/alfresco/repo/transaction/RetryingTransactionHelperTest.java" />
         <exclude name="**/org/alfresco/repo/transaction/TransactionAwareSingletonTest.java" />
         <exclude name="**/org/alfresco/repo/transaction/TransactionServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/transaction/ConnectionPoolOverloadTest.java" />
         <exclude name="**/org/alfresco/repo/transfer/ContentChunkerImplTest.java" />
         <exclude name="**/org/alfresco/repo/transfer/HttpClientTransmitterImplTest.java" />
         <exclude name="**/org/alfresco/repo/transfer/NodeCrawlerTest.java" />
         <exclude name="**/org/alfresco/repo/transfer/RepoTransferReceiverImplTest.java" />
         <exclude name="**/org/alfresco/repo/transfer/TransferServiceCallbackTest.java" />
         <exclude name="**/org/alfresco/repo/transfer/TransferServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/transfer/TransferServiceToBeRefactoredTest.java" />
         <exclude name="**/org/alfresco/repo/transfer/TransferVersionCheckerImplTest.java" />
         <exclude name="**/org/alfresco/repo/transfer/manifest/ManifestIntegrationTest.java" />
         <exclude name="**/org/alfresco/repo/transfer/manifest/TransferManifestTest.java" />
         <exclude name="**/org/alfresco/repo/transfer/script/ScriptTransferServiceTest.java" />
         <exclude name="**/org/alfresco/repo/urlshortening/BitlyUrlShortenerTest.java" />
         <exclude name="**/org/alfresco/repo/usage/UsageTestSuite.java" />
         <exclude name="**/org/alfresco/repo/version/VersionTestSuite.java" />
         <exclude name="**/org/alfresco/repo/wiki/WikiServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/workflow/WorkflowTestSuite.java" />
         <exclude name="**/org/alfresco/service/cmr/calendar/CalendarRecurrenceHelperTest.java" />
         <exclude name="**/org/alfresco/service/cmr/calendar/CalendarTimezoneHelperTest.java" />
         <exclude name="**/org/alfresco/service/cmr/repository/TemporalSourceOptionsTest.java" />
         <exclude name="**/org/alfresco/service/cmr/repository/TransformationOptionLimitsTest.java" />
         <exclude name="**/org/alfresco/service/cmr/repository/TransformationOptionPairTest.java" />
         <exclude name="**/org/alfresco/tools/RenameUserTest.java" />
         <exclude name="**/org/alfresco/util/DynamicallySizedThreadPoolExecutorTest.java" />
         <exclude name="**/org/alfresco/util/FileNameValidatorTest.java" />
         <exclude name="**/org/alfresco/util/JSONtoFmModelTest.java" />
         <exclude name="**/org/alfresco/util/ModelUtilTest.java" />
         <exclude name="**/org/alfresco/util/PropertyMapTest.java" />
         <exclude name="**/org/alfresco/util/ValueProtectingMapTest.java" />
         <exclude name="**/org/alfresco/util/json/ExceptionJsonSerializerTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/DbObjectXMLTransformerTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/DbPropertyTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/DbToXMLTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/DefaultComparisonUtilsTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/DifferenceTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/ExportDbTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/MultiFileDumperTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/RedundantDbObjectTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/SchemaComparatorTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/SchemaReferenceFileTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/SchemaToXMLTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/ValidatingVisitorTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/ValidationResultTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/XMLToSchemaTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/model/ColumnTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/model/ForeignKeyTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/model/IndexTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/model/PrimaryKeyTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/model/SchemaTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/model/SequenceTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/model/TableTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/validator/IndexColumnsValidatorTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/validator/NameValidatorTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/validator/SchemaVersionValidatorTest.java" />
         <exclude name="**/org/alfresco/util/schemacomp/validator/TypeNameOnlyValidatorTest.java" />
         <exclude name="**/org/alfresco/util/test/junitrules/AlfrescoPersonTest.java" />
         <exclude name="**/org/alfresco/util/test/junitrules/ApplicationContextInitTest.java" />
         <exclude name="**/org/alfresco/util/test/junitrules/TemporaryMockOverrideTest.java" />
         <exclude name="**/org/alfresco/util/test/junitrules/TemporaryNodesTest.java" />
         <exclude name="**/org/alfresco/util/test/junitrules/TemporarySitesTest.java" />
		 
         <!-- Remote API Tests -->
         <include name="**/org/alfresco/RemoteApi*TestSuite.java" />
		 <!-- Exclude all the test classes that are run one by one -->
         <exclude name="**/org/alfresco/repo/webdav/WebDAVHelperIntegrationTest.java" />
         <exclude name="**/org/alfresco/repo/webdav/WebDAVLockServiceImplTest.java" />
         <exclude name="**/org/alfresco/repo/web/util/paging/PagingTest.java" />
         <exclude name="**/org/alfresco/repo/management/subsystems/test/SubsystemsTest.java" />
         <exclude name="**/org/alfresco/rest/api/tests/ApiTest.java" />
         <exclude name="**/org/alfresco/repo/cmis/rest/test/PolicyTest.java" />
         <exclude name="**/org/alfresco/repo/remoteticket/RemoteAlfrescoTicketServiceTest.java" />
         <exclude name="**/org/alfresco/repo/webdav/RenameShuffleDetectionTest.java" />
         <exclude name="**/org/alfresco/repo/webdav/MoveMethodTest.java" />
         <exclude name="**/org/alfresco/rest/api/tests/TestCMISAPI.java" />
         <exclude name="**/org/alfresco/repo/webdav/GetMethodTest.java" />
         <exclude name="**/org/alfresco/repo/webservice/CMLUtilTest.java" />
         <exclude name="**/org/alfresco/cmis/changelog/CMISChangeLogServiceTest.java" />
         <exclude name="**/org/alfresco/rest/workflow/api/tests/ProcessDefinitionWorkflowApiTest.java" />
         <exclude name="**/org/alfresco/repo/cmis/rest/test/AspectTest.java" />
         <exclude name="**/org/alfresco/rest/workflow/api/tests/ProcessWorkflowApiTest.java" />
         <exclude name="**/org/alfresco/repo/webdav/WebDAVMethodTest.java" />
         <exclude name="**/org/alfresco/repo/webdav/WebDAVHelperTest.java" />
         <exclude name="**/org/alfresco/rest/framework/tests/core/AllRestFrameworkTest.java" />
         <exclude name="**/org/alfresco/repo/web/util/PagingCursorTest.java" />
         <exclude name="**/org/alfresco/rest/workflow/api/tests/DeploymentWorkflowApiTest.java" />
         <exclude name="**/org/alfresco/repo/web/scripts/WebScriptTestSuite.java" />
         <exclude name="**/org/alfresco/repo/webdav/UnlockMethodTest.java" />
         <exclude name="**/org/alfresco/repo/cmis/rest/test/CMISAtomTemplatesTest.java" />
         <exclude name="**/org/alfresco/rest/workflow/api/tests/TaskWorkflowApiTest.java" />
         <exclude name="**/org/alfresco/repo/webdav/LockInfoImplTest.java" />

         <!-- Enterprise Repo Tests -->
         <include name="**/org/alfresco/enterprise/EnterpriseRepository*TestSuite.java" />
		 <!-- Exclude all the test classes that are run one by one -->
         <exclude name="**/org/alfresco/enterprise/repo/cluster/core/NonMemberIPAddressPickerImplTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/core/HazelcastInstanceFactoryTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/core/ClusteringBootstrapTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/transaction/RetryExceptionsTest.java" />
         <exclude name="**/org/alfresco/enterprise/heartbeat/HeartBeatTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/core/ClusterServiceImplSpringTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/content/routing/StoreSelectorAspectContentStoreTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/forms/jmx/JMXFormProcessorTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/index/IndexRecoveryJobTest.java" />
         <exclude name="**/org/alfresco/enterprise/license/LicenseComponentTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/sync/SyncAdminServiceImplTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/management/script/TypeConversionUtilsTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/core/AlfrescoTcpIpConfigTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/lock/HazelcastLockStoreTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/cache/HazelcastSimpleCacheTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/cache/InvalidatingCacheTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/sync/SyncTrackerComponentTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/sync/SyncServiceImplTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/sync/deltas/SsmnChangeManagementTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/sync/SyncChangeMonitorTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/messenger/HazelcastMessengerTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/core/HazelcastTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/core/ClusterServiceImplTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/core/HazelcastConfigFactoryBeanTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/management/script/JmxScriptTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/core/MembershipChangeLoggerTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/cache/ClusterAwareCacheFactoryTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cache/HibernateCacheProviderTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/messenger/HazelcastMessengerFactoryTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/management/subsystems/AuthenticationChainTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/sync/audit/SyncAuditServiceImplTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/sync/deltas/AggregatedNodeChangeTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/sync/audit/SyncAuditServiceIntegrationTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/sync/SyncChangeMonitorTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/cluster/lock/HazelcastLockStoreTxTest.java" />
         <exclude name="**/org/alfresco/enterprise/security/sync/EnterpriseChainingUserRegistrySynchronizerTest.java" />

         <!-- Enterprise Remote API Tests -->
         <include name="**/org/alfresco/enterprise/EnterpriseRemoteApi*TestSuite.java" />
		 <!-- Exclude all the test classes that are run one by one -->
         <exclude name="**/org/alfresco/enterprise/repo/web/scripts/sync/SyncConfigGetTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/web/scripts/sync/transport/CloudTransportWebScriptsTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/web/scripts/sync/SyncAuditServiceRestApiTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/web/scripts/sync/SyncAdminServiceRestApiTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/web/scripts/sync/RemoteSyncedNodeRestApiTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/web/scripts/admin/UserRegistrySynchronizationTestPostTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/web/scripts/admin/SyncTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/web/scripts/sync/connector/CloudConnectorWebScriptsTest.java" />
         <exclude name="**/org/alfresco/enterprise/repo/web/scripts/admin/AuthenticationTestPostTest.java" />

         <!-- Action Tests -->
         <exclude name="**/org/alfresco/repo/action/**/*Test.java" />
         <!-- Auditable Tests -->
         <exclude name="**/org/alfresco/repo/audit/**/*Test.java" />
         <!-- "Old" CMIS Tests -->
         <exclude name="**/org/alfresco/repo/cmis/ws/*.java" />
         <!-- Content Tests -->
         <include name="**/org/alfresco/repo/content/DataModelContentTestSuite.java" />
         <exclude name="**/org/alfresco/repo/content/**/*Test.java" />
         <!-- Domain Tests -->
         <exclude name="**/org/alfresco/repo/domain/**/*Test.java" />
         <!-- Model (Multilingual and File Folder) Tests -->
         <exclude name="**/org/alfresco/repo/model/**/*Test.java" />
         <!-- Publishing Tests -->
         <exclude name="**/org/alfresco/repo/publishing/**/*Test.java" />
         <!-- Version Tests -->
         <exclude name="**/org/alfresco/repo/version/**/*Test.java" />
         <!-- Workflow Tests -->
         <exclude name="**/org/alfresco/repo/workflow/**/*Test.java" />
         <!-- Web Script Tests -->
         <exclude name="**/org/alfresco/repo/web/scripts/**/*Test.java" />
         <!-- Search Tests -->
         <exclude name="**/org/alfresco/repo/search/**/*Test.java" />
         <!-- Security Tests -->
         <!-- Note  org.alfresco.repo.security.sync.ChainingUserRegistrySynchronizerTest has its own context and runs on its own -->
         <exclude name="**/org/alfresco/repo/ownable/**/*Test.java" />
         <exclude name="**/org/alfresco/repo/security/authentication/**/*Test.java" />
         <exclude name="**/org/alfresco/repo/security/authority/**/*Test.java" />
         <exclude name="**/org/alfresco/repo/security/permissions/**/*Test.java" />
         <exclude name="**/org/alfresco/repo/security/person/**/*Test.java" />
         <!-- Usage Tests -->
         <exclude name="**/org/alfresco/repo/usage/**/*Test.java" />
         <!-- System Build Tests (runs using embedded Jetty) -->
         <exclude name="**/org/alfresco/repo/RepoJetty*Test.java" />
         <!-- embeds: SiteActivitySystemTest,WebServiceSuiteSystemTest, ... -->
         <exclude name="**/org/alfresco/repo/transfer/fsr/**/*Test.java" />
         <!-- Messaging facade -->
         <exclude name="**/org/alfresco/repo/cluster/**/*Test.java"/> 
         <include name="**/org/alfresco/repo/cluster/BuildSafeTestSuite.java"/>
         <!-- REST API tests -->
         <exclude name="**/org/alfresco/repo/cmis/ws/**/*Test.java"/>
         <include name="**/org/alfresco/rest/api/tests/ApiTest.java"/>
         <include name="**/org/alfresco/rest/api/tests/TestCMISAPI.java"/>

         <!-- Excluding long tests -->
         <exclude name="**/org/alfresco/deployment/impl/dmr/DMDeploymentTargetTest.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/enterprise/license/LicenseComponentTest.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/enterprise/repo/admin/indexcheck/IndexCheckServiceImplTest.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/RepositoryStartStopTest.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/cmis/changelog/*.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/cmis/search/*.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/filesys/FTPServerTest.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/filesys/repo/*.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/jcr/**/*.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/opencmis/search/*.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/util/schemacomp/DbToXMLTest.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/util/schemacomp/ExportDbTest.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/util/test/junitrules/*.java" if="minimal.testing" />
         <exclude name="**/org/alfresco/repo/**/*.java" if="minimal.testing" />

         <!-- Suites of unit tests -->
         <include name="**/AllUnitTestsSuite.java" />
         <!-- All other tests -->
         <include name="**/*Test.java" />

      </patternset>
   </target>

   <target name="set-revision-number" depends="init">
      <taskdef name="svn"
               classname="org.tigris.subversion.svnant.SvnTask">
         <classpath refid="classpath.compile" />
      </taskdef>

      <svn failonerror="false">
         <info target="${basedir}"/>
      </svn>
      <condition property="display.build.number" value="-b${alf.build.number}" else="">
          <isset property="alf.build.number" />
      </condition>

      <copy file="${dir.project.repository.config}/alfresco/version.properties"
          toDir="${dir.project.repository.dist}/alfresco" overwrite="true" />
      <replace file="${dir.project.repository.dist}/alfresco/version.properties" summary="yes">
          <replacefilter token="@scm-path@" value="${svn.info.url}" />
          <replacefilter token="@scm-revision@" value="${svn.info.rev}" />
          <replacefilter token="-b@build-number@" value="${display.build.number}" />
          <replacefilter token="version.edition=Community" value="version.edition=${file.name.codeline}" />
      </replace>

      <manifest file="${dir.project.repository.dist}/MANIFEST.MF">
         <attribute name="Specification-Version" value="${version.major}.${version.minor}.${version.revision}"/>
         <attribute name="Implementation-Version" value="${version.number}${display.build.number}"/>
         <attribute name="Implementation-Edition" value="${file.name.codeline}"/>
         <attribute name="Build-Date" value="${DSTAMP}-${TSTAMP}"/>
      </manifest>

   </target>


   <!-- ****************************************************** -->
   <!-- ***************** Entry point targets **************** -->
   <!-- ****************************************************** -->

   <target name="build" 
           description="Performs a clean build of all projects" 
           depends="clean, incremental" />

   <target name="incremental-webclient-depends" 
           description="Performs an incremental build of the dependencies of the Alfresco WAR"
           depends="incremental-core,
                    incremental-datamodel,
                    incremental-legacylucene,
                    incremental-jlan,
                    incremental-mbeans,
                    incremental-deployment,
                    incremental-repository,
                    incremental-wdrdeployment,
                    incremental-remoteapi,
                    incremental-webframeworkcommons,
                    incremental-jndi,
                    incremental-catalinavirtual" />
   
   <target name="incremental" 
           description="Performs an incremental build of all projects"
           depends="incremental-webclient-depends,
                    incremental-webclient,  
                    incremental-webserviceclient,
                    incremental-slingshot,
                    incremental-webeditor,
                    incremental-webeditor-plugin,
                    incremental-solrclient,
                    incremental-solr,
                    incremental-file-transfer-receiver" />

   <target name="distribute-amps" 
           description="Creates the distribution AMP file for core extensions"
           depends="package-spp-extension,
                    package-wcmquickstart-extension,
                    package-wcmquickstart-share-extension, 
                    build-wcmquickstartwebapp-war">
      
      <!-- Copy AMPs to assembly area for installer -->
      <copy todir="${dir.continuous.assemble}/amps">
         <fileset dir="${dir.module.spp.dist}"           includes="${file.name.amp.spp}" />
         <fileset dir="${dir.module.wcmquickstart.dist}"              includes="${file.name.amp.wcmquickstart}" />
         <fileset dir="${dir.module.wcmquickstart-share.dist}"        includes="${file.name.amp.wcmquickstart-share}" />
      </copy>
      
      <copy todir="${dir.continuous.assemble}" file="${dir.project.wcmquickstart-webapp}/target/${file.name.war.wcmquickstart-webapp}" />

      <!-- Zip bundles of AMPs -->
      <zip destfile="${dir.continuous.dist}/${file.name.dist.spp}.zip">
         <fileset dir="${dir.module.spp.dist}"           includes="${file.name.amp.spp}" />
         <fileset file="${dir.module.spp}/README_spp.txt" />
      </zip>
      

   </target>


   <!-- ******************** -->
   <!-- ** Bundle targets ** -->
   <!-- ******************** -->

   <target name="build-tomcat" 
           description="Performs a clean build for Tomcat and deploys the Alfresco and application WAR files"
           depends="clean, incremental-tomcat" />

   <target name="incremental-tomcat" 
           description="Performs an incremental build for Tomcat and deploys the Alfresco and application WAR files"
           depends="incremental-webclient-tomcat, incremental-slingshot-tomcat" />
   
   <target name="incremental-webclient-tomcat" 
           description="Performs an incremental build and deployment of the Alfresco WAR"
           depends="incremental-webclient-depends,
                    incremental-webclient,
                    deploy-webclient-tomcat" />

   <target name="incremental-webclient-tomcat-exploded" 
           depends="incremental-webclient-depends,
                    package-webclient-jar,
                    deploy-webclient-tomcat-exploded" />
   
   <target name="incremental-slingshot-tomcat"
           description="Performs an incremental build and deployment of the slingshot WAR"
           depends="package-webframeworkcommons-jar,
                    incremental-slingshot,
                    deploy-slingshot-tomcat" />

   <target name="incremental-slingshot-tomcat-exploded"
           depends="package-webframeworkcommons-jar,
                    package-slingshot-jar,
                    deploy-slingshot-tomcat-exploded,
                    install-slingshot-amps,
                    minimize-slingshot-deployed-javascript,
					unpack-dojo-exploded" />
   
   <target name="incremental-webeditor-tomcat"
           description="Performs an incremental build and deployment of the Web Editor WAR"
           depends="package-webframeworkcommons,
                    package-webeditor,
                    package-webeditor-plugin,
                    deploy-webeditor-tomcat" />

   <target name="incremental-webeditor-tomcat-exploded"
           depends="compile-webframeworkcommons,
                    compile-webeditor,
                    compile-webeditor-plugin,
                    deploy-webeditor-tomcat-exploded,
                    minimize-webeditor-deployed-javascript" />
   
   <target name="package-all-webeditor"
           depends="package-forms-client-jar, 
                    package-webeditor, 
                    package-webeditor-plugin, 
                    package-webeditor-customersite-sample" />

   <target name="generate-docs" 
           description="Compiles all documentation for all projects"
           depends="generate-javadocs-core,
                    generate-javadocs-datamodel, 
                    generate-javadocs-legacylucene, 
                    generate-javadocs-mbeans,
                    generate-javadocs-deployment,
                    generate-javadocs-repository, 
                    generate-javadocs-wdrdeployment,
                    generate-javadocs-remoteapi, 
                    generate-javadocs-jndi,
                    generate-javadocs-catalinavirtual, 
                    generate-javadocs-webclient, 
                    generate-taglibdocs-webclient, 
                    generate-javadocs-webserviceclient,
                    generate-javadocs-jlan,
                    generate-javadocs-slingshot,
                    generate-javadocs-solrclient,
                    generate-javadocs-solr,
                    generate-javadocs-webframeworkcommons,
                    generate-javadocs-wcmquickstart-clientapi" />

   <!-- ****************************************************** -->
   <!-- ****************** Cleaning targets ****************** -->
   <!-- ****************************************************** -->

   <target name="clean" 
           description="Cleans everything, all projects, modules and all tomcat deployments"
           depends="clean-projects, clean-modules, clean-tomcat-deployments" />
      
   <target name="clean-projects" 
           description="Cleans all projects" 
           depends="clean-webclient-projects,
                    clean-slingshot-projects,
                    clean-webeditor-projects,
                    clean-webserviceclient,
                    clean-solrclient,
                    clean-solr,
                    clean-file-transfer-receiver" />
                    
   <target name="clean-webclient-projects" 
           description="Cleans all projects related to the webclient project" 
           depends="clean-core,
                    clean-datamodel,
                    clean-legacylucene,
                    clean-jlan, 
                    clean-mbeans,
                    clean-deployment, 
                    clean-repository, 
                    clean-wdrdeployment,
                    clean-remoteapi,
                    clean-jndi, 
                    clean-catalinavirtual, 
                    clean-webframeworkcommons,
                    clean-webclient,
                    clean-system-build-test" />
                    
   <target name="clean-slingshot-projects" 
           description="Cleans all projects related to the slingshot project" 
           depends="clean-webframeworkcommons,
                    clean-slingshot" />
   
   <target name="clean-webeditor-projects" 
              description="Cleans all projects related to the web editor project" 
              depends="clean-webframeworkcommons,
                       clean-webeditor-plugin,
                       clean-webeditor,
                       clean-webeditor-customersite-sample" />
                    
   <target name="clean-modules"
           description="Cleans all modules"
           depends="clean-spp,
                    clean-wcmquickstart,
                    clean-wcmquickstart-share,
                    clean-wcmquickstart-clientapi,
                    clean-wcmquickstart-webapp" />
   
   <target name ="clean-tomcat-deployments" 
           description="Cleans all Tomcat server deployments"
           depends="clean-webclient-tomcat-deploy,
                    clean-application-tomcat-deploy,
                    clean-virtual-tomcat-deploy" />
   
   <target name="clean-webclient-tomcat-deploy" 
           description="Cleans the Alfresco WAR from the Tomcat server" 
           depends="init">
      <delete file="${dir.deploy.tomcat}/${file.name.war.webclient}" />
      <delete dir="${dir.deploy.tomcat.webclient}" 
              includeEmptyDirs="true" 
              quiet="yes" />
   </target>
   
   <target name="clean-application-tomcat-deploy" 
           description="Cleans all apps from the application Tomcat server" 
           depends="init">
      <delete file="${dir.deploy.tomcat.application}/${file.name.war.slingshot}" />
      <delete dir="${dir.deploy.tomcat.application.slingshot}" 
              includeEmptyDirs="true" quiet="yes" />
      <delete file="${dir.deploy.tomcat.application}/${file.name.war.webeditor}" />
      <delete dir="${dir.deploy.tomcat.application.webeditor}" 
              includeEmptyDirs="true" quiet="yes" />
      <delete file="${dir.deploy.tomcat.application}/${file.name.war.webeditor.sample.customersite}" />
      <delete dir="${dir.deploy.tomcat.application.webeditor.sample.customersite}" 
              includeEmptyDirs="true" quiet="yes" />
   </target>

   <target name="clean-virtual-tomcat-deploy"
           description="Cleans the Virtual Tomcat deployment" 
           depends="init">
       <delete failonerror="no">
           <!-- Remove old spring jar files lingering in common/lib, if any -->
           <fileset dir="${home.tomcat.virtual}/common/lib" includes="spring*.jar,org.springframework*.jar"/>

           <!-- Get rid of old config files -->
           <fileset dir="${home.tomcat.virtual}/conf" includes="alfresco-*"/>
       </delete>
   </target>
   
   <!--
   <target name="clean-jboss-deploy" 
           description="Cleans the Alfresco application from JBoss" 
           depends="init">
      <delete file="${dir.deploy.jboss}/${file.name.war.webclient}" />
   </target>
   -->

   <!-- ****************************************************** -->
   <!-- **************** Deployment targets ****************** -->
   <!-- ****************************************************** -->
   
   <target name="deploy-virtual-tomcat" 
           description="Deploys to Virtual Tomcat (the virtualization server)" 
           depends="init, clean-virtual-tomcat-deploy">
      <deploy-virtual-tomcat location="${home.tomcat.virtual}" />
   </target>
   
   <target name="-deploy-tomcat-common" depends="init">

      <available file="${home.tomcat}/common/lib" type="dir" property="tomcat5.present" />
      
      <fail if="tomcat5.present" message="Deployment using these scripts requires Tomcat 6." />

      <!-- ensure mysql drivers and xalan files are present -->
      <delete>
         <fileset dir="${home.tomcat}/lib" 
                  includes="mysql-connector*" 
                  excludes="${file.name.jar.mysql.connector}" />
         <fileset dir="${home.tomcat}/lib" 
                  includes="postgresql-*" 
                  excludes="${file.name.jar.postgres.connector}" />
      </delete>

      <copy todir="${home.tomcat}/lib"      
            file="${dir.project.3rdparty.lib}/${dir.name.devenv}/${file.name.jar.postgres.connector}" />

      <copy todir="${home.tomcat}/lib"      
            file="${dir.project.3rdparty.lib}/${dir.name.devenv}/${file.name.jar.mysql.connector}" />

      <copy todir="${home.tomcat}/endorsed" 
            file="${dir.project.3rdparty.lib}/${dir.name.xalan}/${file.name.jar.xalan}" />

      <copy todir="${home.tomcat}/endorsed" 
            file="${dir.project.3rdparty.lib}/${dir.name.xalan}/${file.name.jar.serializer}" />

      <!-- enable WCM functionality -->
      <copy todir="${home.tomcat}/shared/classes/alfresco/extension" 
            file="${file.name.wcm.bootstrap}" />
   </target>
   
   <target name="deploy-webclient-tomcat" 
           description="Deploys the Alfresco WAR to Tomcat" 
           depends="clean-webclient-tomcat-deploy, -deploy-tomcat-common, deploy-virtual-tomcat">
      <delete file="${dir.deploy.tomcat}/${file.name.war.webclient}" />
      <delete dir="${dir.deploy.tomcat.webclient}" 
              includeEmptyDirs="true" quiet="yes" />
      
      <!-- copy the alfresco WAR file to Tomcat's deploy folder -->
      <copy todir="${dir.deploy.tomcat}" 
            file="${dir.project.webclient.dist}/${file.name.war.webclient}" />
   </target>

   <target name="deploy-webclient-tomcat-exploded" 
           depends="-deploy-tomcat-common">
      
      <!-- remove the WAR, if necessary -->
      <delete file="${dir.deploy.tomcat}/${file.name.war.webclient}" />
      
      <!-- copy the class files from each project to the WEB-INF/classes folder -->
      <copy todir="${dir.deploy.tomcat.webclient}/WEB-INF/classes" verbose="${copy.verbose}">
      
         <!-- copy class files -->
         <fileset dir="${dir.project.core.classes}" />
         <fileset dir="${dir.project.datamodel.classes}" />
         <fileset dir="${dir.project.legacylucene.classes}" />
         <fileset dir="${dir.project.mbeans.classes}" />
         <fileset dir="${dir.project.deployment.classes}" />
         <fileset dir="${dir.project.repository.classes}" 
                  excludes="**/extension/**" />
         <fileset dir="${dir.project.wdrdeployment.classes}" />
         <fileset dir="${dir.project.remoteapi.classes}" />
         <fileset dir="${dir.project.catalinavirtual.classes}" />
         <fileset dir="${dir.project.webframeworkcommons.classes}" />
         <fileset dir="${dir.project.webclient.classes}" 
                  excludes="**/extension/**" />
         <fileset dir="${dir.project.jlan.classes}" excludes="org/alfresco/config/**" />
         
         <!-- copy config files -->
         <fileset dir="${dir.project.core.src.java}" 
                  includes="log4j.properties,logging.properties" />
         <fileset dir="${dir.project.datamodel.config}" 
                  excludes="**/extension/**" />
         <fileset dir="${dir.project.repository.config}" 
                  excludes="**/extension/**,alfresco/version.properties" />
         <fileset dir="${dir.project.remoteapi.config}"
                  excludes="**/extension/**" />
         <fileset dir="${dir.project.webclient.config}" 
                  excludes="**/extension/**" />
         <!-- include MT context by default (pre-configured but not enabled until at least one tenant is created) --> 
         <fileset dir="${dir.project.repository.config}" 
                  includes="**/extension/mt/mt-*context.xml"/>
         <!-- NOTE: include dev-context.xml to allow developer overrides -->
         <fileset dir="${dir.project.repository.config}" 
                  includes="**/extension/dev-context.xml"/>
         <!-- Override version.properties with modified one -->
         <fileset dir="${dir.project.repository.dist}" erroronmissingdir="false"
                  includes="alfresco/version.properties"/>
      </copy>
      
      <!-- for Share activity feed (email) notifier - overwrite dummy files -->

      <copy todir="${dir.deploy.tomcat.webclient}/WEB-INF/classes/alfresco/messages" overwrite="true">
         <!-- for activity messages based on activity type -->
         <fileset dir="${dir.project.slingshot.config}/alfresco/site-webscripts/org/alfresco/components/dashlets"
                  includes="activity-list.get*.properties" />
         <!-- note: remove ".get" since it seems to confuse java.util.ResourceBundle.getBundle -->
         <mapper type="regexp" from="^(.*).get(.*)\.properties$$" to="\1\2.properties"/>
      </copy>

      <copy todir="${dir.deploy.tomcat.webclient}/WEB-INF/classes/alfresco/messages" overwrite="true">
         <!-- for role.* messages -->
         <fileset dir="${dir.project.slingshot.config}/alfresco/messages"
                  includes="slingshot*.properties" />
      </copy>

      <!-- copy webclient web source files i.e. JSPs, images etc. -->
      <copy todir="${dir.deploy.tomcat.webclient}" verbose="${copy.verbose}">
         <fileset dir="${dir.project.webclient.src.web}" 
                  excludes="WEB-INF/jboss*.xml, WEB-INF/portlet*.xml, 
                            WEB-INF/alfresco-object.xml" />
      </copy>
      
      <!-- copy required 3rd party libs -->
      <copy todir="${dir.deploy.tomcat.webclient}/WEB-INF/lib" verbose="${copy.verbose}">
         <fileset dir="${dir.project.3rdparty.lib}" includes="*.jar" 
                  excludes="${dir.name.devenv}/**" />
         <fileset dir="${dir.project.3rdparty.lib}/optional" includes="*.jar" /> 
         <fileset dir="${dir.project.3rdparty.lib}/openoffice" includes="*.jar" />
         <fileset dir="${dir.project.3rdparty.lib}/jmagick" includes="*.jar" />
         <fileset dir="${dir.project.3rdparty.lib}/commons" includes="*.jar" />
         <fileset dir="${dir.project.3rdparty.lib}/spring-surf" includes="${includes.webscriptframework.libs.spring-surf}" />
         <fileset dir="${dir.project.3rdparty.lib}/jbpm" includes="*.jar" />
         <fileset dir="${dir.project.3rdparty.lib}/activiti" includes="*.jar" />
         <fileset dir="${dir.project.3rdparty.lib}/fop" includes="*.jar"/>
         <fileset dir="${dir.project.3rdparty.lib}/abdera" includes="*.jar"/>
         <fileset dir="${dir.project.3rdparty.lib}/gdata-1.47.1" includes="*.jar"/>
         <fileset dir="${dir.project.3rdparty.lib}/spring-social" includes="*.jar"/>
		 <fileset dir="${dir.project.3rdparty.lib}/opensaml" includes="*.jar"/>
      </copy>
      
      <!-- copy webservices files -->
      <copy todir="${dir.deploy.tomcat.webclient}/wsdl" verbose="${copy.verbose}">
         <fileset dir="${dir.project.remoteapi.src.wsdl}" />
      </copy>
      <copy todir="${dir.deploy.tomcat.webclient}/WEB-INF/classes/META-INF" verbose="${copy.verbose}">
         <fileset dir="${dir.project.remoteapi.src.metainf}"/>
      </copy>

      <!-- Installing auto apply repository AMPs into repository WAR -->
      <install-amps-in-dir ampfilesdir="${dir.modules.autoapplyamps.repo}"
                               warfile="${dir.deploy.tomcat.webclient}" />

   </target>
   
   <target name="deploy-webclient-changes" depends="init">
      <copy todir="${dir.deploy.tomcat.webclient}" verbose="${copy.verbose}">
         <fileset dir="${dir.project.webclient.src.web}" excludes="WEB-INF/**" />
      </copy>
   </target>
   
   <target name="deploy-slingshot-tomcat" depends="init" 
           description="Deploys the slingshot WAR to the application Tomcat server">
      <delete file="${dir.deploy.tomcat.application}/${file.name.war.slingshot}" />
      <delete dir="${dir.deploy.tomcat.application.slingshot}" 
              includeEmptyDirs="true" quiet="yes" />
      
      <!-- copy the slingshot WAR file to the application Tomcat deploy folder -->
      <copy todir="${dir.deploy.tomcat.application}" 
            file="${dir.project.slingshot.dist}/${file.name.war.slingshot}" />
   </target>
   
   <target name="deploy-slingshot-tomcat-exploded" depends="init">
      <!-- remove the WAR, if necessary -->
      <delete file="${dir.deploy.tomcat.application}/${file.name.war.slingshot}" />

      <!-- copy all source files, ensuring slingshot project files are copied first -->
      <copy todir="${dir.deploy.tomcat.application.slingshot}" verbose="${copy.verbose}">
         <fileset dir="${dir.project.slingshot.src.web}" />
      </copy>
      <copy todir="${dir.deploy.tomcat.application.slingshot}" verbose="${copy.verbose}">
         <fileset dir="${dir.project.webframeworkcommons.src.web}" excludes="WEB-INF/web.xml" />
      </copy>
      
      <!-- copy config files, ensuring slingshot project files are copied first -->
      <copy todir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/classes" verbose="${copy.verbose}">
         <fileset dir="${dir.project.slingshot.config}" excludes="**/extension/**" />
      </copy>
      <copy todir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/classes" verbose="${copy.verbose}">
         <fileset dir="${dir.project.webframeworkcommons.config}" excludes="**/extension/**" />
      </copy>
      
      <!-- add all class files to WEB-INF/classes, ensuring slingshot project files are copied first -->
      <copy todir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/classes" verbose="${copy.verbose}">
         <fileset dir="${dir.project.core.classes}" />
      </copy>
      <copy todir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/classes" verbose="${copy.verbose}">
         <fileset dir="${dir.project.slingshot.classes}" />
      </copy>
      <copy todir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/classes" verbose="${copy.verbose}">
         <fileset dir="${dir.project.jlan.classes}" />
         <fileset dir="${dir.project.webframeworkcommons.classes}" />
      </copy>
      
      <!-- add all JARs to WEB-INF/lib -->
      <copy todir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/lib" verbose="${copy.verbose}">
         <fileset dir="${dir.project.3rdparty.lib}" 
                  includes="${includes.webscriptframework.libs} ${includes.slingshot.libs}" />
         <fileset dir="${dir.project.3rdparty.lib}/optional" 
                 includes="${includes.webscriptframework.libs.optional}" />
         <fileset dir="${dir.project.3rdparty.lib}/commons" 
                  includes="${includes.webscriptframework.libs.commons}" />
         <fileset dir="${dir.project.3rdparty.lib}/spring-surf" 
                  includes="${includes.webscriptframework.libs.spring-surf}" />
         <fileset dir="${dir.project.3rdparty.lib}/abdera"  
                  includes="${includes.webscriptframework.libs.abdera}" />
      </copy>

      <!-- unzip and add 3rd party javascript library -->
      <unzip src="${file.zip.slingshot.yui}"
             dest="${dir.deploy.tomcat.application.slingshot}" />
             
      <!-- there seems to be a hidden __MACOSX folder in the YUI -->
      <!-- distribution, remove it if present -->
      <delete dir="${dir.deploy.tomcat.application.slingshot}/__MACOSX" 
              includeEmptyDirs="true" quiet="yes" />

      <!-- Copy our yui directory to apply YUI fixes -->
      <copy todir="${dir.deploy.tomcat.application.slingshot}/yui" verbose="${copy.verbose}">
         <fileset dir="${dir.project.slingshot.src.web}/yui" />
      </copy>

      
      
      <!-- clean up previously generated properties files -->
      <delete>
         <fileset dir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/classes/alfresco/messages">
            <include name="*_en.properties" />
         </fileset>
         <fileset dir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/classes/alfresco/site-webscripts">
            <include name="*_en.properties" />
         </fileset>
      </delete>

      <copy todir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/classes/alfresco/messages">
         <fileset dir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/classes/alfresco/messages"/>
         <mapper type="regexp" 
                 from="^([^_]*).properties$" 
                 to="\1_en.properties"/>
      </copy>
      <copy todir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/classes/alfresco/site-webscripts">
         <fileset dir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/classes/alfresco/site-webscripts"/>
         <mapper type="regexp" 
                 from="^([^_]*).get.properties$" 
                 to="\1.get_en.properties"/>
      </copy>
   </target>

   <target name="check-dojo-unpacked-exploded" depends="init">
      <condition property="dojo.unpacked.exploded">
         <available file="${dojo.tomcat.target}" property="dojo.unpacked.exploded" type="dir"/>
      </condition>
      <echo message="Found exploded Dojo? ${dojo.unpacked.exploded}"/>
   </target>
   
   <target name="unpack-dojo-exploded" depends="init, check-dojo-unpacked-exploded" unless="dojo.unpacked.exploded">
      <echo message="Found exploded Dojo? ${dojo.unpacked.exploded}"/>
      
      <!-- unzip and add Dojo -->          
      <unzip src="${file.zip.slingshot.dojo}"
             dest="${dir.deploy.tomcat.application.slingshot}" />
             
      <!-- Move the directories into the correct location -->
      <move todir="${dojo.tomcat.target}" includeEmptyDirs="yes" verbose="${copy.verbose}">
         <fileset dir="${dir.deploy.tomcat.application.slingshot}/${dojo.archive}">
            <include name="**/*" />
         </fileset>
      </move>

      <!-- Delete the now empty Dojo release directory -->
      <delete dir="${dir.deploy.tomcat.application.slingshot}/${dojo.archive}"/>
   </target>
   
   <!-- This is a target just for developers to unpack the uncompressed Dojo source and utilities for testing, etc -->
   <target name="unpack-dev-dojo" depends="init">
	  <!-- Delete the "production" Dojo... -->
	  <delete dir="${dojo.tomcat.target}"/>

      <!-- Unzip and add "development" Dojo -->          
      <unzip src="${file.zip.slingshot.dojo.development}"
             dest="${dir.deploy.tomcat.application.slingshot}" />
      <move todir="${dojo.tomcat.target}" includeEmptyDirs="yes" verbose="${copy.verbose}">
         <fileset dir="${dir.deploy.tomcat.application.slingshot}/${dojo.archive.development}">
            <include name="**/*" />
         </fileset>
      </move>
      <!-- Delete the directory created for unpacking -->	  
	  <delete dir="${dir.deploy.tomcat.application.slingshot}/${dojo.archive.development}"/>
   </target>
   
   <target name="install-slingshot-amps" depends="init">
      <!-- Installing auto apply Share AMPs into Share WAR -->
      <touch mkdirs="true" file="${dir.deploy.tomcat.application.slingshot}/META-INF/MANIFEST.MF" />
      <install-amps-in-dir ampfilesdir="${dir.modules.autoapplyamps.share}"
                               warfile="${dir.deploy.tomcat.application.slingshot}" />
   </target>

   <target name="minimize-slingshot-deployed-javascript" depends="init">
      <echo>Merging selected Slingshot Javascript files...</echo>
      <concat destfile="${dir.deploy.tomcat.application.slingshot}/js/yui-common.js" force="no">
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/utilities/utilities.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/button/button-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/container/container-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/menu/menu-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/json/json-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/selector/selector-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/datasource/datasource-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/autocomplete/autocomplete-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/paginator/paginator-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/datatable/datatable-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/history/history-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/treeview/treeview-min.js" />
		   <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/cookie/cookie-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/uploader/uploader-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/calendar/calendar-min.js" />
         <fileset file="${dir.deploy.tomcat.application.slingshot}/yui/resize/resize-min.js" />
         <fileset file="${dir.project.slingshot.src.web}/yui/yui-patch.js" />
      </concat>

      <!-- Note: This config needs manually duplicating to the projects.xml file
           Note: disabled currently - no longer used - SpringSurf will automatically concat related files in future release
           since the addition of far future expire time CRC based URLs for resources, multiple scripts not an issue.
      <concat destfile="${dir.deploy.tomcat.application.slingshot}/js/documentlibrary-actions.js" force="no">
         <fileset file="${dir.project.slingshot.src.web}/components/documentlibrary/actions.js" />
         <fileset file="${dir.project.slingshot.src.web}/components/documentlibrary/actions-util.js" />
         <fileset file="${dir.project.slingshot.src.web}/modules/simple-dialog.js" />
         <fileset file="${dir.project.slingshot.src.web}/modules/documentlibrary/global-folder.js" />
         <fileset file="${dir.project.slingshot.src.web}/modules/documentlibrary/copy-move-to.js" />
         <fileset file="${dir.project.slingshot.src.web}/modules/documentlibrary/cloud-folder.js" />
         <fileset file="${dir.project.slingshot.src.web}/components/people-finder/people-finder.js" />
         <fileset file="${dir.project.slingshot.src.web}/modules/documentlibrary/permissions.js" />
         <fileset file="${dir.project.slingshot.src.web}/modules/documentlibrary/aspects.js" />
         <fileset file="${dir.project.slingshot.src.web}/modules/social-publish.js" />
         <fileset file="${dir.project.slingshot.src.web}/modules/documentlibrary/cloud-folder.js" />
         <fileset file="${dir.project.slingshot.src.web}/modules/cloud-auth.js" />
      </concat>

      <concat destfile="${dir.deploy.tomcat.application.slingshot}/js/datalist-actions.js" force="no">
         <fileset file="${dir.project.slingshot.src.web}/components/data-lists/actions.js" />
         <fileset file="${dir.project.slingshot.src.web}/modules/simple-dialog.js" />
      </concat>-->

      <echo>Compressing Slingshot Javascript...</echo>
      <minimize-javascript sourcedir="${dir.deploy.tomcat.application.slingshot}" 
                           destdir="${dir.deploy.tomcat.application.slingshot}"/>
   </target>
   
   <target name="deploy-webeditor-tomcat" depends="init" 
           description="Deploys the web editor WAR to the application Tomcat server">
      <delete file="${dir.deploy.tomcat.application}/${file.name.war.webeditor}" />
      <delete dir="${dir.deploy.tomcat.application.webeditor}" 
              includeEmptyDirs="true" quiet="yes" />
      
      <!-- copy the web editor WAR file to the application Tomcat deploy folder -->
      <copy todir="${dir.deploy.tomcat.application}" 
            file="${dir.project.webeditor.dist}/${file.name.war.webeditor}" />
   </target>
   
   <target name="deploy-webeditor-tomcat-exploded" depends="init">
      <!-- remove the WAR, if necessary -->
      <delete file="${dir.deploy.tomcat.application}/${file.name.war.webeditor}" />
      
      <!-- copy all source files -->
      <copy todir="${dir.deploy.tomcat.application.webeditor}" verbose="${copy.verbose}">
         <fileset dir="${dir.project.webeditor.src.web}" excludes="WEB-INF/awe.tld" />
         <fileset dir="${dir.project.webeditorplugin.src.web}" />
         <fileset dir="${dir.project.webframeworkcommons.src.web}" excludes="WEB-INF/web.xml" />
      </copy>
      
      <!-- copy config files -->
      <copy todir="${dir.deploy.tomcat.application.webeditor}/WEB-INF/classes" verbose="${copy.verbose}">
         <fileset file="${dir.project.webeditor.src.java}/log4j.properties" />
         <fileset dir="${dir.project.webeditor.config}" excludes="**/extension/**" />
         <fileset dir="${dir.project.webeditorplugin.config}" excludes="**/extension/**" />
         <fileset dir="${dir.project.webframeworkcommons.config}" excludes="**/extension/**" />
      </copy>
      
      <!-- add all class files to WEB-INF/classes -->
      <copy todir="${dir.deploy.tomcat.application.webeditor}/WEB-INF/classes" verbose="${copy.verbose}">
         <fileset dir="${dir.project.webeditor.classes}" />
         <fileset dir="${dir.project.webeditorplugin.classes}" />
         <fileset dir="${dir.project.jlan.classes}" />
         <fileset dir="${dir.project.webframeworkcommons.classes}" />
      </copy>
      
      <!-- copy forms-client-context.xml to inject form config and common properties -->
      <copy todir="${dir.deploy.tomcat.application.webeditor}/WEB-INF/classes/org/springframework/extensions/surf" 
            file="${dir.project.webframeworkcommons.src}/plugin/forms-client-context.xml" />
      
      <!-- add all JARs to WEB-INF/lib -->
      <copy todir="${dir.deploy.tomcat.application.webeditor}/WEB-INF/lib" verbose="${copy.verbose}">
         <fileset dir="${dir.project.3rdparty.lib}" 
                  includes="${includes.webscriptframework.libs}" />
         <fileset dir="${dir.project.3rdparty.lib}/optional" 
                 includes="${includes.webscriptframework.libs.optional}" />
         <fileset dir="${dir.project.3rdparty.lib}/commons" 
                  includes="${includes.webscriptframework.libs.commons}" />
         <fileset dir="${dir.project.3rdparty.lib}/spring-surf" 
                  includes="${includes.webeditor.spring-surf}" />
         <fileset dir="${dir.project.3rdparty.lib}/abdera"  
                  includes="${includes.webscriptframework.libs.abdera}" />
      </copy>

      <!-- unzip and add YUI library -->
      <unzip src="${file.zip.webeditor.yui}" dest="${dir.deploy.tomcat.application.webeditor}" />
   </target>
   
   <target name="deploy-webeditor-sample" depends="package-webeditor-customersite-sample-war">
      <delete file="${dir.deploy.tomcat.application}/${file.name.war.webeditor.sample.customersite}" />
      <copy todir="${dir.deploy.tomcat.application}" 
            file="${dir.project.webeditorsamples.customersite.dist}/${file.name.war.webeditor.sample.customersite}" />
   </target>
   
   <target name="deploy-webeditor-sample-exploded" depends="compile-webeditor-customersite-sample">
      <delete file="${dir.deploy.tomcat.application}/${file.name.war.webeditor.sample.customersite}" />
      <copy todir="${dir.deploy.tomcat.application.webeditor.sample.customersite}" verbose="${copy.verbose}">
         <fileset dir="${dir.project.webeditorsamples.customersite.src.web}" />
      </copy>
      <copy todir="${dir.deploy.tomcat.application.webeditor.sample.customersite}/WEB-INF" verbose="${copy.verbose}">
         <fileset dir="${dir.project.webeditor.src.webinf}" includes="awe.tld" />
      </copy>
      <copy todir="${dir.deploy.tomcat.application.webeditor.sample.customersite}/WEB-INF/lib" verbose="${copy.verbose}">
         <fileset dir="${dir.project.3rdparty}/lib/commons" 
                  includes="commons-httpclient-3.1.jar, commons-logging-1.1.3.jar, commons-codec-1.9.jar" />
         <fileset dir="${dir.project.3rdparty}/lib/optional" includes="log4j-1.2.17.jar" />
         <fileset dir="${dir.project.3rdparty}/lib/spring-surf" 
                  includes="spring-webeditor-client-jsp-1.2.1-SNAPSHOT.jar" />
         <fileset dir="${dir.project.3rdparty}/lib" includes="json.jar" />
      </copy>
      <copy todir="${dir.deploy.tomcat.application.webeditor.sample.customersite}/WEB-INF/classes" verbose="${copy.verbose}">
         <fileset dir="${dir.project.webeditorsamples.customersite.classes}" />
         <fileset dir="${dir.project.webeditor.classes}" includes="org/alfresco/web/awe/**/*.class" />
         <fileset dir="${dir.project.webeditor.src.java}" includes="log4j.properties" />
      </copy>
   </target>

   <target name="minimize-webeditor-deployed-javascript" depends="init">
      <minimize-javascript sourcedir="${dir.deploy.tomcat.application.webeditor}" 
                           destdir="${dir.deploy.tomcat.application.webeditor}" />
   </target>
      
   <target name="deploy-fdk" depends="deploy-share-fdk, deploy-repo-fdk-exploded" />
   
   <target name="deploy-share-fdk" depends="package-fdk-client">
      <copy todir="${home.tomcat.application}/shared/lib" 
            file="${dir.project.fdk.client.dist}/${file.name.jar.fdk}" />
   </target>
      
   <target name="deploy-share-fdk-exploded" depends="init">
      <copy todir="${dir.deploy.tomcat.application.slingshot}" verbose="${copy.verbose}">
         <fileset dir="${dir.project.fdk.client.src.web}" />
      </copy>
      <copy todir="${dir.deploy.tomcat.application.slingshot}/WEB-INF/classes" verbose="${copy.verbose}">
         <fileset dir="${dir.project.fdk.client.config}" />
      </copy>
   </target>
   
   <target name="deploy-repo-fdk-exploded" depends="init">
      <copy todir="${home.tomcat}/shared/classes" verbose="${copy.verbose}" overwrite="yes">
         <fileset dir="${dir.project.fdk.repo.config}" includes="**/fdk-*.*" excludes="**/fdk-context.xml" />
      </copy>
      <copy todir="${home.tomcat}/shared/classes/alfresco/extension" verbose="${copy.verbose}" overwrite="yes">
         <fileset dir="${dir.project.fdk.repo.config}/alfresco/module/org_alfresco_module_fdk" 
                  includes="fdk-context.xml" />
      </copy>
   </target>

   <target name="start-tomcat-webclient" 
           description="Starts the Alfresco Tomcat server on Windows" 
           depends="init">
      <exec dir="${home.tomcat}/bin" 
            executable="cmd.exe" 
            spawn="true">
         <arg line="/k startup.bat" />
      </exec>
   </target>

   <target name="start-tomcat-virtual" 
           description="Starts the virtual Tomcat server on Windows" 
           depends="init">
      <exec dir="${home.tomcat.virtual}/bin" 
            executable="cmd.exe" 
            spawn="true">
         <arg line="/k startup.bat" />
      </exec>
   </target>

   <target name="start-tomcat-application" 
           description="Starts the application Tomcat server on Windows" 
           depends="init">
      <exec dir="${home.tomcat.application}/bin" 
            executable="cmd.exe" 
            spawn="true">
         <arg line="/k startup.bat" />
      </exec>
   </target>

   <target name="start-tomcat-webclient-debug"
           description="Starts the Alfresco Tomcat server on Windows in debug mode" 
           depends="init">
      <fail unless="env.JPDA_ADDRESS" 
            message="To run Tomcat in debug mode you need to setup the JPDA_ADDRESS enviornment variable"/>
      <fail unless="env.JPDA_TRANSPORT"
            message="To run Tomcat in debug mode you need to setup the JPDA_TRANSPORT enviornment variable"/>
      
      <exec dir="${home.tomcat}/bin" 
            executable="cmd.exe" 
            spawn="true">
         <arg line="/k catalina.bat jpda start" />
      </exec>
   </target>
   
   <!--
   <target name="deploy-jboss" 
           description="Deploys to JBoss" 
           depends="clean-jboss-deploy">
      <copy todir="${dir.deploy.jboss}" 
            file="${dir.project.webclient.dist}/${file.name.war.webclient}" />
      <delete>
         <fileset dir="${home.jboss}/server/default/lib" 
                  includes="mysql-connector*" 
                  excludes="${file.name.jar.mysql.connector}" />
      </delete>

      <copy todir="${home.jboss}/server/default/lib" 
            file="${dir.project.3rdparty.lib}/${dir.name.devenv}/${file.name.jar.mysql.connector}" />

   </target>
   
   <target name="start-jboss" 
           description="Starts the JBoss server on Windows" 
           depends="init">
      <exec dir="${home.jboss}/bin" 
            executable="cmd.exe" 
            spawn="true">
         <arg line="/k start run.bat" />
      </exec>
   </target>
   -->

   <target name="deploy-amp" 
           description="Deploys an AMP file to the web client WAR file. Usage deploy-amp -Dampfile=[ampfile]" 
           depends="init">
      <fail unless="ampfile" 
            message="You must supply the path to an AMP file using -Dampfile=[ampfile]"/>
      <install-amp ampfile="${ampfile}" 
                   warfile="${dir.project.webclient.dist}/${file.name.war.webclient}" />
   </target>

   <target name="deploy-solr" description="Add the repository specific files to the SOLR instance" depends="package-core, package-datamodel, package-legacylucene, package-solrclient, package-solr" >
      <delete includeemptydirs="true">
         <fileset dir="${dir.project.solr.instance.lib}" includes="**/*"/>
      </delete>

      <copy todir="${dir.project.solr.instance.lib}" 
            file="${dir.project.core.dist}/${file.name.jar.core}" />
      <copy todir="${dir.project.solr.instance.lib}" 
            file="${dir.project.datamodel.dist}/${file.name.jar.datamodel}" />
      <copy todir="${dir.project.solr.instance.lib}" 
            file="${dir.project.legacylucene.dist}/${file.name.jar.legacylucene}" />
      <copy todir="${dir.project.solr.instance.lib}" 
            file="${dir.project.solrclient.dist}/${file.name.jar.solrclient}" />
      <copy todir="${dir.project.solr.instance.lib}"
            file="${dir.project.solr.dist}/${file.name.jar.solr}" />

      <!-- Used to use the CopyLibrariesFromEclipseClasspath custom Ant task as copy-libs-from-classpath -->
      <!-- But we want to stop committing the .classpath projects, so temporarily list all jars -->
      <!-- until we move to a proper dependency management system... -->
      <copy todir="${dir.project.solr.instance.lib}">
        <fileset dir="${dir.project.3rdparty.lib}/commons">
            <include name="commons-codec-*.jar"/>
            <include name="commons-collections-*.jar"/>
            <include name="commons-httpclient-*.jar"/>
            <include name="commons-io-*.jar"/>
            <include name="commons-logging-*.jar"/>
        </fileset>
        <fileset dir="${dir.project.3rdparty.lib}/jboss">
            <include name="jboss-vfs-*GA.jar"/>
        </fileset>
        <fileset dir="${dir.project.3rdparty.lib}/jetty">
            <include name="jetty-client-*.jar"/>
            <include name="jetty-http-*.jar"/>
            <include name="jetty-security-*.jar"/>
            <include name="jetty-server-*.jar"/>
            <include name="jetty-servlet-*.jar"/>
            <include name="jetty-util-*.jar"/>
            <include name="jetty-webapp-*.jar"/>
        </fileset>
        <fileset dir="${dir.project.3rdparty.lib}/j2ee">
            <include name="servlet.jar"/>
        </fileset>
        <fileset dir="${dir.project.3rdparty.lib}/optional">
            <include name="log4j-*.jar"/>
        </fileset>
        <fileset dir="${dir.project.3rdparty.lib}/spring-surf">
            <include name="spring-surf-*.jar"/>
            <include name="spring-surf-api-*.jar"/>
            <include name="spring-surf-core-*.jar"/>
            <include name="spring-surf-core-configservice-*.jar"/>
            <include name="spring-webeditor-*.jar"/>
            <include name="spring-webeditor-client-jsp-*.jar"/>
            <include name="spring-webscripts-*.jar"/>
            <include name="spring-webscripts-api-*.jar"/>
        </fileset>
        <fileset dir="${dir.project.3rdparty.lib}">
            <include name="acegi-security-*.jar"/>
            <include name="alfresco-xmlfactory-*.jar"/>
            <include name="antlr-*.jar"/>
            <include name="chemistry-abdera-*.jar"/>
            <include name="chemistry-opencmis-client-api-*.jar"/>
            <include name="chemistry-opencmis-client-bindings-*.jar"/>
            <include name="chemistry-opencmis-client-impl-*.jar"/>
            <include name="chemistry-opencmis-commons-api-*.jar"/>
            <include name="chemistry-opencmis-commons-impl-*.jar"/>
            <include name="chemistry-opencmis-server-bindings-*.jar"/>
            <include name="chemistry-opencmis-server-support-*.jar"/>
            <include name="chemistry-opencmis-test-browser-*.jar"/>
            <include name="chemistry-opencmis-test-tck-*.jar"/>
            <include name="dom4j-*.jar"/>
            <include name="guessencoding-*.jar"/>
            <include name="hibernate-*.jar"/>
            <include name="jackson-core-asl-*.jar"/>
            <include name="jaxb-impl-*.jar"/>
            <include name="jaxb-xjc-*.jar"/>
            <include name="jaxen-*.jar"/>
            <include name="jibx-run-*.jar"/>
            <include name="joda-time-*.jar"/>
            <include name="json.jar"/>
            <include name="jta.jar"/>
            <include name="jug-asl-*.jar"/>
            <include name="junit-dep-*.jar"/>
            <include name="lucene-analyzers-*.jar"/>
            <include name="lucene-core-*.jar"/>
            <include name="lucene-regex-*.jar"/>
            <include name="lucene-snowball-*.jar"/>
            <include name="mockito-all-*.jar"/>
            <include name="mybatis-*.jar"/>
            <include name="mybatis-spring-*.jar"/>
            <include name="org.springframework.aop-*.jar"/>
            <include name="org.springframework.asm-*.jar"/>
            <include name="org.springframework.beans-*.jar"/>
            <include name="org.springframework.context-*.jar"/>
            <include name="org.springframework.context.support-*.jar"/>
            <include name="org.springframework.core-*.jar"/>
            <include name="org.springframework.expression-*.jar"/>
            <include name="org.springframework.jdbc-*.jar"/>
            <include name="org.springframework.orm-*.jar"/>
            <include name="org.springframework.transaction-*.jar"/>
            <include name="org.springframework.web-*.jar"/>
            <include name="org.springframework.web.servlet-*.jar"/>
            <include name="quartz-*.jar"/>
            <include name="slf4j-api-*.jar"/>
            <include name="slf4j-log4j12-*.jar"/>
            <include name="stax-api-*.jar"/>
            <include name="tika-core-*.jar"/>
            <include name="tika-parsers-*.jar"/>
            <include name="xercesImpl-*.jar"/>
        </fileset>
      </copy>
   </target>


   <!-- ****************************************************** -->
   <!-- ****************** Testing targets ******************* -->
   <!-- ****************************************************** -->

   <target name="test" 
           description="Runs unit tests for all the projects" 
           depends="clean, 
                    incremental, 
                    test-core,
                    test-datamodel, 
                    test-legacylucene, 
                    test-deployment, 
                    test-repository,
                    test-remoteapi,
                    test-wdrdeployment,
                    test-webframeworkcommons, 
                    test-webclient, 
                    test-webserviceclient,
                    test-system-build-test" />

   <target name="run-junit-test" 
           description="Runs a single JUnit test. Usage run-test -Dtestcase=[test] -Dprojectdir=[dir] [-Dstoponerror=[yes|no]]"
           depends="init">
      <fail unless="testcase" 
            message="You must supply a testcase to run using -Dtestcase=[test]"/>
      <fail unless="projectdir" 
            message="You must supply a projectdir to run using -Dprojectdir=[dir]"/>
      
      <condition property="haltonfailure" else="no">
         <and>
            <isset property="stoponerror" />
            <istrue value="${stoponerror}" />
         </and>
      </condition>

      <mkdir dir="${projectdir}/${dir.name.build}/${dir.name.test.results}" />

      <junit showoutput="yes"
             printsummary="yes" 
             fork="yes" 
             maxmemory="${mem.size.max}" 
             haltonfailure="${haltonfailure}" 
             dir="${projectdir}">
         <jvmarg value="-server"/>
         <jvmarg value="-XX:MaxPermSize=256M"/>
         <jvmarg value="-Dcom.sun.management.jmxremote"/>
         <classpath>
            <path refid="classpath.unit.test" />
            <path refid="classpath.unit.test.extension"/>
            <path refid="classpath.unit.test.beyondrepo"/>
         </classpath>
         <formatter type="xml" />
         <test name="${testcase}" 
               todir="${projectdir}/${dir.name.build}/${dir.name.test.results}" />
      </junit>
   </target>

   <!-- Run a junit test without the junit task output in memory buffering -->
   <target name="run-test" 
           description="Runs a single JUnit test bypassing the junit task. Usage run-test -Dtestcase=[test] -Dprojectdir=[dir]"
           depends="init">
      <fail unless="testcase" 
            message="You must supply a testcase to run using -Dtestcase=[test]"/>
      <fail unless="projectdir" 
            message="You must supply a projectdir to run using -Dprojectdir=[dir]"/>

      <mkdir dir="${projectdir}/${dir.name.build}/${dir.name.test.results}" />
      <java fork="yes" 
            classname="org.junit.runner.JUnitCore" 
            dir="${projectdir}"
            output="${projectdir}/${dir.name.build}/${dir.name.test.results}/${testcase}.out">
         <jvmarg value="-Xmx${mem.size.max}"/>
         <jvmarg value="-server"/>
         <arg value="${testcase}"/>
         <classpath refid="classpath.unit.test"/>
      </java>
   </target>

   <target name="run-forms-engine-tests" depends="init, test-webframeworkcommons">
      <!-- run FormService test -->
      <antcall target="run-junit-test">
         <param name="testcase" value="org.alfresco.repo.forms.FormServiceImplTest" />
         <param name="projectdir" value="${dir.project.repository}" />
         <param name="stoponerror" value="yes" />
      </antcall>
      
      <!-- Run Field Processor tests -->
      <antcall target="run-junit-test">
         <param name="testcase" value="org.alfresco.repo.forms.processor.node.FieldProcessorTest" />
         <param name="projectdir" value="${dir.project.repository}" />
         <param name="stoponerror" value="yes" />
      </antcall>
      
      <!-- Run Form Processor tests -->
      <antcall target="run-junit-test">
         <param name="testcase" value="org.alfresco.repo.forms.processor.workflow.TaskFormProcessorTest" />
         <param name="projectdir" value="${dir.project.repository}" />
         <param name="stoponerror" value="yes" />
      </antcall>
      
      <antcall target="run-junit-test">
         <param name="testcase" value="org.alfresco.repo.forms.processor.workflow.WorkflowFormProcessorTest" />
         <param name="projectdir" value="${dir.project.repository}" />
         <param name="stoponerror" value="yes" />
      </antcall>
      
      <!-- run REST API tests -->
      <antcall target="run-junit-test">
         <param name="testcase" value="org.alfresco.repo.web.scripts.forms.FormRestApiGet_Test" />
         <param name="projectdir" value="${dir.project.remoteapi}" />
         <param name="stoponerror" value="yes" />
      </antcall>
      <antcall target="run-junit-test">
         <param name="testcase" value="org.alfresco.repo.web.scripts.forms.FormRestApiJsonPost_Test" />
         <param name="projectdir" value="${dir.project.remoteapi}" />
         <param name="stoponerror" value="yes" />
      </antcall>
   </target>

   <!-- ****************************************************** -->
   <!-- ******************** Debug targets ******************* -->
   <!-- ****************************************************** -->

   <target name="dump-properties" 
           depends="dump-version, 
                    dump-env-properties, 
                    dump-dir-properties, 
                    dump-file-properties" />

   <target name="dump-version" 
           depends="init">
      <echo level="info">version.number = ${version.number}</echo>
   </target>

   <target name="dump-env-properties" 
           depends="init">
      <echo level="info">alfresco.basedir = ${alfresco.basedir}</echo>
      <echo level="info">dir.projects = ${dir.projects}</echo>
      <echo level="info">user.home = ${user.home}</echo>
      <echo level="info">ant.home = ${ant.home}</echo>
      <echo level="info">home.tomcat = ${home.tomcat}</echo>
      <echo level="info">home.tomcat.application = ${home.tomcat.application}</echo>
      <echo level="info">home.tomcat.virtual = ${home.tomcat.virtual}</echo>
      <echo level="info">home.jboss = ${home.jboss}</echo>
      <echo level="info">home.findbugs = ${home.findbugs}</echo>
   </target>

   <target name="dump-dir-properties" 
           depends="init">
       <echoproperties prefix="dir" />
   </target>

   <target name="dump-file-properties" 
           depends="init">
      <echoproperties prefix="file" />
   </target>

   <target name="dump-arbitary-properties" 
           depends="init">
      <fail unless="prefix" 
            message="You must supply a prefix i.e. -Dprefix=file.name" />
      <echoproperties prefix="${prefix}" />
   </target>

   <target name="dump-all-properties" 
           depends="init">
      <echoproperties />
   </target>

   <target name="file-format-check" description="Find modified text files that are not WINDOWS, UTF-8.  Look in directory -Ddir=[dir]" depends="init" >
      <fail unless="dir" 
            message="You must supply a directory to run against using -Ddir=[dir]"/>
      <java fork="yes" 
            classname="org.alfresco.util.Convert" 
            dir="." >
         <classpath refid="classpath.unit.test" />
         <arg line="--dry-run --svn-status --encoding=UTF-8 --line-ending=WINDOWS --match=(.classpath|.java|.xml|.xsd|.jsp|.properties|.txt|.sql|.sample|.css|.js)$ --ignore=(.svn|classes) ${dir}"/>
      </java> 
   </target> 

   <target name="file-format-fix" description="Fix modified text files that are not WINDOWS, UTF-8.  Look in directory -Ddir=[dir]" depends="init" >
      <fail unless="dir" 
            message="You must supply a directory to run against using -Ddir=[dir]"/>
      <java fork="yes" 
            classname="org.alfresco.util.Convert" 
            dir="." >
         <classpath refid="classpath.unit.test" />
         <arg line="--no-backup --svn-status --encoding=UTF-8 --line-ending=WINDOWS --match=(.classpath|.java|.xml|.xsd|.jsp|.properties|.txt|.sql|.sample|.css|.js)$ --ignore=(.svn|classes) ${dir}"/>
      </java> 
   </target> 

   <target name="context-dependency-list" description="List out what bits of the context depend on which other bits. Specify -Dcontext= for a different context file, and/or more details" depends="init">
      <condition property="context" value="">
         <not><isset property="context"/></not>
      </condition>

      <java fork="yes" 
            classname="org.alfresco.util.ContextDependencyLister" 
            dir="." >
         <classpath refid="classpath.unit.test" />
         <classpath path="${ant.core.lib}" />
         <arg line="${context}" />
      </java> 
   </target> 

   <!--- Stub targets get overridden in other build scripts -->
   <target name="distribute-extras" description="Build distribution targets for enterprise projects" />

   <target name="assemble-command-extras" description="Assemble commands" />

</project>
