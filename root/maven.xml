<!--  
    | maven.xml files
    | _______________
    | The maven.xml scripts are NOT maven1 build files,  while they are Ant scripts used to deploy Alfresco artifacts 
    | to a Maven repository (by default maven.alfresco.com).
    |
    | This file deploys main Community artifacts to a Maven repository. 
    |  
    | Accepted properties:
    | ____________________
    | -Dmaven.isRelease=[true|false] ==> Switches between a RELEASE and SNAPSHOT deployment (default: SNAPSHOT) 
    | -Dmaven.custom.label=customLabel ==> Adds a suffix to artifacts, e.g. for branch deployment
    | -Dmaven.dryRun ==> calls install instead of deploy, to test before uploading
    |
    | Usage:
    | ______
    | The 'maven-deploy' target by default deploys a SNAPSHOT to the snapshot repo, otherwise deploys a release if the build is invoked with
    |
    | -Dmaven.isRelease=true
    |
    | This script deploys Community packages and depends already on all required build targets to produce artifacts:
    |
    | NOTE: maven-deploy assumes artifacts have already been build. Use the maven-build-deploy target instead to build and deploy in a single execution. 
    |
    | - For a Community SNAPSHOT deploy you can run it with: ant -f continuous.xml maven-deploy
    | - For a Community RELEASE deploy you can run it with: ant -f continuous.xml maven-deploy -Dmaven.isRelease=true
    | 
    | Branch releases:
    | ________________
    | It's also possible to use a custom suffix to label special artifacts (e.g. deployed from a branch), by passing the following property -Dmaven.custom.label=mylabel
    | to the build command line. This will append this suffix to the version of all deployed artifacts.
    | 
    | Prerequisites:
    | ______________
    | - Needs to be run in continous.xml environment, so run your build with -f continuous.xml 
    | - Does NOT need Maven installed. Will download Maven 2.1.10 embedded
    | - export ANT_OPTS="-XX:MaxPermSize=128m" otherwise you'll get OOM/PermGen
    | - check the "maven-prerequisites" target in root/maven.xml to see which standard build targets maven-deploy depends to
    | - need to add server credentials to standard Maven ~/.m2/settings.xml (if not configured in BINARIES)
    |
    -->
<project name="maven" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

    <dirname property="alfresco.basedir" file="${ant.file.alfresco}"/>
    <!-- 
        | Allows to deploy custom labeled artifacts (e.g. from a branch). 
        | By default no custom label is specified. 
        | Specify one by passing the command line switch: -Dmaven.custom.label=mybranch 
        | Artifacts will be deployed with that custom label appended
        --> 
    <target name="configure-custom-version" if="maven.custom.label">
       <property name="maven.version.suffix" value="-${maven.custom.label}"/>
    </target>

    <target name="configure-empty-custom-version" unless="maven.custom.label">
        <property name="maven.version.suffix" value=""/>
    </target>
	
    <!-- Aggregator target putting together all configs/tasks needed for maven-deploy. Fails if build number is unset, requires continous.xml -->
    <target name="maven-env-prerequisites" depends="fail-if-build-number-is-unset,configure-snapshot-deployment,configure-release-deployment">
	    <!-- Defining the maven ant tasks at runtime -->
        <path id="maven-ant-tasks.classpath" path="${dir.project.3rdparty.lib}/devenv/maven-ant-tasks-2.1.3.jar" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml"  uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />
        <!-- Configuring the settings location -->
        <property name="maven.settings.file" value="${dir.name.binaries}/build-classpath/settings.xml"/>
    	<!-- Configuring the platform distribution pom location -->
    	<property name="dir.project.sdk.maven.platform" value="${dir.project.sdk}/alfresco-platform-distribution"/>
    	<property name="maven.platform.pom.file" value="${dir.project.sdk.maven.platform}/pom.xml"/>
        <condition property="maven.isRelease">
            <istrue value="${env.bamboo_deploy_as_release}"/>
        </condition>
        <condition property="maven.command"
            value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file"
             else="org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy-file">
            <isset property="maven.dryRun"/>
        </condition>
    </target>
	
    <!-- Conditionally calls set-build-number. Fails if not in continuous.xml environment -->
    <target name="fail-if-build-number-is-unset" unless="version.number">
        <echo>Maven deployment targets need to be run in continuous.xml environment, as they depend on set-build-number. Failing...</echo> 
        <fail message="Maven deployment needs to be run in continuous environment. Try calling set-build-number first or directly running ant -f continuous.xml maven-build-deploy [-Dbuild.script=enterpriseprojects/build.xml]"/>
    </target>

    <!-- Configures for SNAPSHOT deployment in case it's not a release -->
    <target name="configure-snapshot-deployment" unless="maven.isRelease" depends="configure-custom-version,configure-empty-custom-version">
    	<echo>Configuring Maven Snapshot deployment</echo>
    	<property name="maven.repo.url" value="${maven.repository.snapshots.url}" />
        <property name="maven.repo.id" value="${maven.repository.snapshots.id}"/>
        <property name="maven.version.number" value="${version.number}${maven.version.suffix}-SNAPSHOT"/>
    	<echo>Configured Snapshot deployment of Alfresco ${file.name.edition} ${version.number} to ${maven.repo.url} as ${maven.group.id} alfresco-* ${maven.version.number} artifacts</echo>
    </target>

    <!-- Configures for release deployment in case it's a release ==> -Dmaven.isRelease=true -->
    <target name="configure-release-deployment" if="maven.isRelease" depends="configure-custom-version,configure-empty-custom-version">
    	<echo>Configuring Maven Release deployment</echo>
    	<property name="maven.repo.url" value="${maven.repository.url}" />
        <property name="maven.repo.id" value="${maven.repository.id}"/>
        <property name="maven.version.number" value="${version.number}${maven.version.suffix}"/>
    	<echo>Configured Release deployment of Alfresco ${file.name.edition} ${version.number} to ${maven.repo.url} as ${maven.group.id} alfresco-* ${maven.version.number}</echo>
    </target>
	
    <!--
        | Deploys projects/*/build/dist JARs/WARs/ZIPs to a Maven repository configured via properties.
        | NOTE: This goal assumes the artifacts have already been built at an earlier stage. Use maven-build-deploy to build and deploy at once.
        | See beginning of this file for full usage instructions. 
        -->
    <target name="maven-deploy" description="Deploys JAR/WAR/ZIP dist artifacts to the Alfresco Maven Repository" depends="maven-env-prerequisites, maven-deploy-webclient, maven-deploy-slingshot, maven-deploy-solr, maven-deploy-amps, maven-deploy-extras, maven-deploy-platform-distribution-pom" /> 

    <target name="maven-deploy-webclient" description="Deploys Alfresco Explorer related JARs/WARs to a Maven repository" depends="maven-deploy-webclient-jars, maven-deploy-webclient-webapp" />

    <target name="maven-deploy-slingshot" description="Deploys Alfresco Share related JARs/WARs to a Maven repository" depends="maven-deploy-slingshot-jars, maven-deploy-slingshot-webapp" />

    <target name="maven-deploy-solr" description="Deploys Solr related JARs/WARs to a Maven repository" depends="maven-deploy-solr-jars, maven-deploy-solr-webapp" />

    <target name="maven-deploy-amps" description="Deploys additional Alfresco AMPs to a Maven repository">
        <!-- SPP -->
        <mvndeploypom file="${dir.module.spp.dist}/${file.name.amp.spp}"
            artifactId="alfresco-spp"
            classifiers="classes,config"
            types="jar,jar"
            files="${dir.module.spp.dist}/${file.name.jar.spp},${dir.module.spp.dist}/${file.name.jar.spp.config}"
            pomFile="${dir.module.spp}/pom.xml" />

        <!-- FDK Repo AMP  - TODO: add pom.xml? -->
        <mvndeploy file="${dir.project.fdk.repo.dist}/${file.name.amp.fdk}"
            artifactId="alfresco-fdk-repo" />

        <!-- WCM Quickstart Repo - TODO: add pom.xml? -->
        <mvndeploy file="${dir.module.wcmquickstart.dist}/${file.name.amp.wcmquickstart}"
            artifactId="alfresco-wcm-quickstart-repo" />

        <!-- WCM Quickstart Share - TODO: add pom.xml? -->
        <mvndeploy file="${dir.module.wcmquickstart-share.dist}/${file.name.amp.wcmquickstart-share}"
            artifactId="alfresco-wcm-quickstart-share" />
    </target>

    <target name="maven-deploy-extras" description="Deploys additional Alfresco JARs/WARs/ZIPs to a Maven repository">
        <!-- WCM Quickstart webapp -->
        <mvndeploypom file="${dir.project.wcmquickstart-webapp.dist}/${file.name.war.wcmquickstart-webapp}"
            artifactId="alfresco-wcm-quickstart"
            pomFile="${dir.project.wcmquickstart-webapp}/pom.xml" />

        <!-- Web Service Client -->
        <mvndeploypom file="${dir.project.webserviceclient.dist}/${file.name.jar.webserviceclient}"
            artifactId="alfresco-web-service-client"
            classifiers="sources,javadoc"
            types="jar,jar"
            files="${dir.continuous.assemble.config}/alfresco-web-service-client-sources.zip,${dir.continuous.assemble.sdk}/doc/alfresco-web-service-client-doc.zip"
            pomFile="${dir.project.webserviceclient}/pom.xml" />

        <!-- Web Editor JAR -->
        <mvndeploypom file="${dir.project.webeditor.dist}/${file.name.jar.webeditor}"
            artifactId="alfresco-webeditor"
            pomFile="${dir.project.webeditor}/pom.xml" />

        <!-- Web Editor taglib - TODO: add pom.xml? -->
        <mvndeploy file="${dir.project.webeditor.dist}/${file.name.jar.webeditor.taglib}"
            artifactId="alfresco-webeditor-taglib" />

        <!-- Web Editor plugin -->
        <mvndeploypom file="${dir.project.webeditorplugin.dist}/${file.name.jar.webeditor.plugin}"
            artifactId="alfresco-webeditor-plugin"
            pomFile="${dir.project.webeditorplugin}/pom.xml" />

        <!-- MMT classes: slim jar, with dependencies in pom.xml -->
        <copy file="${dir.project.3rdparty.lib}/mmt-dependencies/pom-mmt.xml" todir="${dir.continuous.assemble.mmt}" overwrite="true" />
        <replace file="${dir.continuous.assemble.mmt}/pom-mmt.xml" summary="true"
            token="VERSION" value="${maven.version.number}" failOnNoReplacements="true" />
        <mvndeploypom file="${dir.continuous.assemble.mmt}/main/main.jar"
            artifactId="alfresco-mmt"
            pomFile="${dir.continuous.assemble.mmt}/pom-mmt.xml" />
        <!-- MMT classes -->
        <!-- BDE-85: Temporary comment until we make this right, deploying with a useful pom
        <artifact:mvn mavenVersion="3.0.3">
            <arg value="org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy-file"/>
            <arg value="-Dfile=${dir.continuous.assemble.mmt}/main/main.jar"/>
            <arg value="-DgroupId=${maven.group.id}"/>
            <arg value="-DartifactId=alfresco-mmt"/>
            <arg value="-Dversion=${maven.version.number}"/>
            <arg value="-Dpackaging=jar"/>
            <arg value="-Durl=${maven.repo.url}"/>
            <arg value="-DrepositoryId=${maven.repo.id}"/>
            <arg value="-s"/>
            <arg value="${maven.settings.file}"/>
            <arg value="-N"/>
        </artifact:mvn>
        -->
    </target>

    <target name="maven-deploy-webclient-jars" description="Deploys Alfresco Explorer related JARs to a Maven repository">
        <!-- Parent POM -->
        <mvndeploypomonly artifactId="alfresco-parent"
            file="${alfresco.basedir}/pom.xml" />

        <!-- Core -->
        <mvndeploypom file="${dir.project.core.dist}/${file.name.jar.core}"
            artifactId="alfresco-core"
            classifiers="sources,javadoc,config,tests"
            types="jar,jar,jar,jar"
            files="${dir.continuous.assemble.config}/alfresco-core-sources.zip,${dir.continuous.assemble.sdk}/doc/alfresco-core-doc.zip,${dir.continuous.assemble.config}/alfresco-core-config.zip,${dir.continuous.assemble.config}/alfresco-core-test-resources.zip"
            pomFile="${dir.project.core}/pom.xml" />

        <!-- Datamodel -->
        <mvndeploypom file="${dir.project.datamodel.dist}/${file.name.jar.datamodel}"
            artifactId="alfresco-data-model"
            classifiers="sources,javadoc,config,tests"
            types="jar,jar,jar,jar"
            files="${dir.continuous.assemble.config}/alfresco-datamodel-sources.zip,${dir.continuous.assemble.sdk}/doc/alfresco-datamodel-doc.zip,${dir.continuous.assemble.config}/alfresco-datamodel-config.zip,${dir.continuous.assemble.config}/alfresco-datamodel-test-resources.zip"
            pomFile="${dir.project.datamodel}/pom.xml" />

        <!-- Deployment -->
        <mvndeploypom file="${dir.project.deployment.dist}/${file.name.jar.deployment}"
            artifactId="alfresco-deployment"
            classifiers="sources,javadoc,tests"
            types="jar,jar,jar"
            files="${dir.continuous.assemble.config}/alfresco-deployment-sources.zip,${dir.continuous.assemble.sdk}/doc/alfresco-deployment-doc.zip,${dir.continuous.assemble.config}/alfresco-deployment-test-resources.zip"
            pomFile="${dir.project.deployment}/pom.xml" />

        <!-- JLAN Embed -->
        <mvndeploypom file="${dir.project.jlan.dist}/${file.name.jar.jlan}"
            artifactId="alfresco-jlan-embed"
            classifiers="sources,javadoc"
            types="jar,jar"
            files="${dir.continuous.assemble.config}/alfresco-jlan-embed-sources.zip,${dir.continuous.assemble.sdk}/doc/alfresco-jlan-embed-doc.zip"
            pomFile="${dir.project.jlan}/pom.xml" />

        <!-- Mbeans -->
        <mvndeploypom file="${dir.project.mbeans.dist}/${file.name.jar.mbeans}"
            artifactId="alfresco-mbeans"
            pomFile="${dir.project.mbeans}/pom.xml" />

        <!-- Remote API -->
        <mvndeploypom file="${dir.project.remoteapi.dist}/${file.name.jar.remoteapi}"
            artifactId="alfresco-remote-api"
            classifiers="sources,javadoc,config,tests"
            types="jar,jar,jar,jar"
            files="${dir.continuous.assemble.config}/alfresco-remote-api-sources.zip,${dir.continuous.assemble.sdk}/doc/alfresco-remote-api-doc.zip,${dir.continuous.assemble.config}/alfresco-remote-api-config.zip,${dir.continuous.assemble.config}/alfresco-remote-api-test-resources.zip"
            pomFile="${dir.project.remoteapi}/pom.xml" />

        <!-- Repository -->
        <mvndeploypom file="${dir.project.repository.dist}/${file.name.jar.repository}"
            artifactId="alfresco-repository"
            classifiers="sources,javadoc,config,tests"
            types="jar,jar,jar,jar"
            files="${dir.continuous.assemble.config}/alfresco-repository-sources.zip,${dir.continuous.assemble.sdk}/doc/alfresco-repository-doc.zip,${dir.continuous.assemble.config}/alfresco-repository-config.zip,${dir.continuous.assemble.config}/alfresco-repository-test-resources.zip"
            pomFile="${dir.project.repository}/pom.xml" />

        <!-- WDR Deployment -->
        <mvndeploypom file="${dir.project.wdrdeployment.dist}/${file.name.jar.wdrdeployment}"
            artifactId="alfresco-wdr-deployment"
            pomFile="${dir.project.wdrdeployment}/pom.xml" />

        <!-- Web Client -->
        <mvndeploypom file="${dir.project.webclient.dist}/${file.name.jar.webclient}"
            artifactId="alfresco-web-client"
            classifiers="sources,javadoc,tests"
            types="jar,jar,jar"
            files="${dir.continuous.assemble.config}/alfresco-web-client-sources.zip,${dir.continuous.assemble.sdk}/doc/alfresco-web-client-doc.zip,${dir.continuous.assemble.config}/alfresco-web-client-test-resources.zip"
            pomFile="${dir.project.webclient}/pom.xml" />

        <!-- Web Framework Commons -->
        <mvndeploypom file="${dir.project.webframeworkcommons.dist}/${file.name.jar.webframeworkcommons}"
            artifactId="alfresco-web-framework-commons"
            classifiers="sources,javadoc,config,tests"
            types="jar,jar,jar,jar"
            files="${dir.continuous.assemble.config}/alfresco-web-framework-commons-sources.zip,${dir.continuous.assemble.sdk}/doc/alfresco-web-framework-commons-doc.zip,${dir.continuous.assemble.config}/alfresco-web-framework-commons-config.zip,${dir.continuous.assemble.config}/alfresco-web-framework-commons-test-resources.zip"
            pomFile="${dir.project.webframeworkcommons}/pom.xml" />
    </target>
            
    <target name="maven-deploy-webclient-webapp" description="Deploys Alfresco Explorer related WAR to a Maven repository">
        <mvndeploypom file="${dir.project.webclient.dist}/${file.name.war.webclient}"
            classifiers="sources,javadoc,classes,config,tests"
            types="jar,jar,jar,jar,jar"
            files="${dir.continuous.assemble.config}/alfresco-web-client-sources.zip,${dir.continuous.assemble.sdk}/doc/alfresco-web-client-doc.zip,${dir.project.webclient.dist}/${file.name.jar.webclient},${dir.continuous.assemble.config}/alfresco-web-client-config.zip,${dir.continuous.assemble.config}/alfresco-web-client-test-resources.zip"
            artifactId="alfresco"
            pomFile="${dir.project.webclient}/pom.xml" />
    </target>

    <target name="maven-deploy-slingshot-jars" description="Deploys Alfresco Share related JARs to a Maven repository">
        <!-- Share JAR -->
        <mvndeploypom file="${dir.project.slingshot.dist}/${file.name.jar.slingshot}"
            artifactId="alfresco-share"
            classifiers="sources,javadoc"
            types="jar,jar"
            files="${dir.continuous.assemble.config}/alfresco-share-sources.zip,${dir.continuous.assemble.sdk}/doc/alfresco-share-doc.zip"
            pomFile="${dir.project.slingshot}/pom.xml" />

        <!-- FDK Client JAR  - TODO: add pom.xml? -->
        <mvndeploy file="${dir.project.fdk.client.dist}/${file.name.jar.fdk}"
            artifactId="alfresco-fdk-client" />
    </target>

    <target name="maven-deploy-slingshot-webapp" description="Deploys Alfresco Share related WAR to a Maven repository">
        <mvndeploypom file="${dir.project.slingshot.dist}/${file.name.war.slingshot}"
            artifactId="share"
            classifiers="sources,javadoc,classes,config"
            types="jar,jar,jar,jar"
            files="${dir.continuous.assemble.config}/alfresco-share-sources.zip,${dir.continuous.assemble.sdk}/doc/alfresco-share-doc.zip,${dir.project.slingshot.dist}/${file.name.jar.slingshot},${dir.continuous.assemble.config}/alfresco-share-config.zip"
            pomFile="${dir.project.slingshot}/pom.xml" />
    </target>

    <target name="maven-deploy-solr-jars" description="Deploys Solr related JARs to a Maven repository">
        <mvndeploypom file="${dir.project.solr.dist}/${file.name.jar.solr}"
            artifactId="alfresco-solr-integration"
            pomFile="${dir.project.solr}/pom.xml" />
    </target>

    <target name="maven-deploy-solr-webapp" description="Deploys Solr related webapp to a Maven Repository">
        <mvndeploy file="${dir.continuous.dist}/${file.name.dist.solr}.zip"
            artifactId="alfresco-solr" />
    </target>

    <target name="maven-deploy-platform-distribution-pom" description="Deploys Alfresco Platform distribution POM after replacing appropriate tokens" depends="maven-env-prerequisites">
        <delete dir="${dir.project.sdk.maven.platform}/${dir.name.build}" failonerror="false"/>
        <mkdir dir="${dir.project.sdk.maven.platform}/${dir.name.build}"/>
        <copy todir="${dir.project.sdk.maven.platform}/${dir.name.build}" overwrite="true">
            <fileset dir="${dir.project.sdk.maven.platform}" includes="**" excludes="build"/>
        </copy>
        <replace file="${dir.project.sdk.maven.platform}/${dir.name.build}/pom.xml">
            <replacefilter  token="@@maven.group.id@@" value="${maven.group.id}"/>
            <replacefilter  token="@@maven.version.number@@" value="${maven.version.number}"/>
            <replacefilter  token="@@maven.edition@@" value="${file.name.edition}"/>
            <replacefilter  token="@@maven.site.url@@" value="${maven.repository.site.url}"/>
            <replacefilter  token="@@maven.site.id@@" value="${maven.repository.id}"/>
        </replace>
        <mvndeploypomonly artifactId="alfresco-platform-distribution" file="${dir.project.sdk.maven.platform}/${dir.name.build}/pom.xml" />
    </target>

    <target name="build-config-artifacts" depends="init">
      <property name="dir.assemble.config" value="${basedir}/build/assemble/config" />

      <!-- -->
      <!-- Config jars -->
      <!-- -->
      <mkdir dir="${dir.assemble.config}" />
      <zip destfile="${dir.assemble.config}/alfresco-core-config.zip"
          basedir="${dir.project.core.src.java}" includes="log4j.properties,logging.properties" />
      <zip destfile="${dir.assemble.config}/alfresco-datamodel-config.zip"
          basedir="${dir.project.datamodel.config}" />
      <zip destfile="${dir.assemble.config}/alfresco-repository-config.zip">
          <fileset dir="${dir.project.repository.config}" excludes="alfresco/version.properties" />
          <fileset dir="${dir.project.repository.dist}" includes="alfresco/version.properties" />
      </zip>
      <zip destfile="${dir.assemble.config}/alfresco-remote-api-config.zip"
          basedir="${dir.project.remoteapi.config}" />
      <zip destfile="${dir.assemble.config}/alfresco-web-framework-commons-config.zip"
          basedir="${dir.project.webframeworkcommons.config}" />
      <zip destfile="${dir.assemble.config}/alfresco-web-client-config.zip"
          basedir="${dir.project.webclient.config}" />
      <zip destfile="${dir.assemble.config}/alfresco-share-config.zip"
          basedir="${dir.project.slingshot.config}" />
      <zip destfile="${dir.assemble.config}/alfresco-enterprise-repository-config.zip"
          basedir="enterpriseprojects/repository/config" />
      <zip destfile="${dir.assemble.config}/alfresco-enterprise-remote-api-config.zip"
          basedir="enterpriseprojects/remote-api/config" />

      <!-- -->
      <!-- Source jars -->
      <!-- -->
      <zip destfile="${dir.assemble.config}/alfresco-core-sources.zip"
          basedir="${dir.project.core.src.java}" />
      <zip destfile="${dir.assemble.config}/alfresco-datamodel-sources.zip"
          basedir="${dir.project.datamodel.src.java}" />
      <zip destfile="${dir.assemble.config}/alfresco-deployment-sources.zip"
          basedir="${dir.project.deployment.src.java}" />
      <zip destfile="${dir.assemble.config}/alfresco-jlan-embed-sources.zip"
          basedir="${dir.project.jlan.src.java}" />
      <zip destfile="${dir.assemble.config}/alfresco-repository-sources.zip"
          basedir="${dir.project.repository.src.java}" />
      <zip destfile="${dir.assemble.config}/alfresco-remote-api-sources.zip"
          basedir="${dir.project.remoteapi.src.java}" />
      <zip destfile="${dir.assemble.config}/alfresco-web-framework-commons-sources.zip"
          basedir="${dir.project.webframeworkcommons.src.java}" />
      <zip destfile="${dir.assemble.config}/alfresco-web-client-sources.zip"
          basedir="${dir.project.webclient.src.java}" />
      <zip destfile="${dir.assemble.config}/alfresco-web-service-client-sources.zip"
          basedir="${dir.project.webserviceclient.src.java}" />
      <zip destfile="${dir.assemble.config}/alfresco-share-sources.zip"
          basedir="${dir.project.slingshot.src.java}" />
      <zip destfile="${dir.assemble.config}/alfresco-vti-sources.zip"
          basedir="${dir.module.spp}/source/java" />
      <zip destfile="${dir.assemble.config}/alfresco-enterprise-repository-sources.zip"
          basedir="enterpriseprojects/repository/source/java" />
      <zip destfile="${dir.assemble.config}/alfresco-enterprise-remote-api-sources.zip"
          basedir="enterpriseprojects/remote-api/source/java" />

      <!-- Test resource jars -->
      <zip destfile="${dir.assemble.config}/alfresco-repository-test-resources.zip"
          basedir="${dir.project.repository.src}/${dir.name.test.resources}" />
    </target>

    <!-- DEPLOYMENT MACROS -->
    <macrodef name="mvndeploy">
        <attribute name="file" />
        <attribute name="artifactId" />
        <attribute name="classifier" default="" />
        <sequential>
            <echo>
            Deploying @{file}
            as ${maven.group.id}:@{artifactId}:${maven.version.number}...</echo>

            <local name="fileabsolute" />
            <local name="extension.tmp" />
            <local name="extension" />
            <property name="fileabsolute" location="@{file}" />
            <pathconvert property="extension">
                <fileset file="@{file}"/>
                <mapper type="regexp" from="^.*\.(.*)$$" to="\1"/>
            </pathconvert>

            <artifact:mvn mavenVersion="3.0.3">
                <arg value="${maven.command}"/>
                <arg value="-Dfile=${fileabsolute}"/>
                <arg value="-DgroupId=${maven.group.id}"/>
                <arg value="-DartifactId=@{artifactId}"/>
                <arg value="-Dversion=${maven.version.number}"/>
                <arg value="-Dpackaging=${extension}"/>
                <arg value="-Durl=${maven.repo.url}"/>
                <arg value="-DrepositoryId=${maven.repo.id}"/>
                <arg value="-Dclassifier=@{classifier}"/>
                <arg value="-s"/>
                <arg value="${maven.settings.file}"/>
                <arg value="-N"/>
            </artifact:mvn>

        </sequential>
    </macrodef>

    <macrodef name="mvndeploypomonly">
        <attribute name="file" />
        <attribute name="artifactId" />
        <sequential>
            <echo>
            Deploying @{file}
            as ${maven.group.id}:@{artifactId}:${maven.version.number}... </echo>

            <local name="fileabsolute" />
            <property name="fileabsolute" location="@{file}" />

            <!-- Remove SNAPSHOT in POM version if necessary -->
            <condition property="pomVersion" value="${maven.version.number}-SNAPSHOT" else="${maven.version.number}">
                <istrue value="${maven.isRelease}" />
            </condition>
            <replace file="@{file}" summary="true" token="${pomVersion}" value="${maven.version.number}" >
                <filename name="@{file}"/>
            </replace>

            <artifact:mvn mavenVersion="3.0.3">
                <arg value="${maven.command}"/>
                <arg value="-Dfile=${fileabsolute}"/>
                <arg value="-DgroupId=${maven.group.id}"/>
                <arg value="-DartifactId=@{artifactId}"/>
                <arg value="-Dversion=${maven.version.number}"/>
                <arg value="-Dpackaging=pom"/>
                <arg value="-Durl=${maven.repo.url}"/>
                <arg value="-DrepositoryId=${maven.repo.id}"/>
                <arg value="-s"/>
                <arg value="${maven.settings.file}"/>
                <arg value="-N"/>
            </artifact:mvn>

            <!-- Revert change in pom done above -->
            <replace file="@{file}" summary="true" token="${maven.version.number}" value="${pomVersion}" />
        </sequential>
    </macrodef>

    <macrodef name="mvndeploypom">
        <attribute name="file" />
        <attribute name="artifactId" />
        <attribute name="pomFile" />
        <attribute name="classifiers" default="" />
        <attribute name="files" default="" />
        <attribute name="types" default="" />
        <sequential>
            <echo>
            Deploying @{file}
            as ${maven.group.id}:@{artifactId}:${maven.version.number}... @{classifiers}</echo>

            <local name="fileabsolute" />
            <local name="extension" />
            <local name="sideArtifacts" />
            <property name="fileabsolute" location="@{file}" />
            <pathconvert property="extension">
                <fileset file="@{file}"/>
                <mapper type="regexp" from="^.*\.(.*)$$" to="\1"/>
            </pathconvert>
            <condition property="sideArtifacts" value="-Dclassifiers=@{classifiers} -Dfiles=@{files} -Dtypes=@{types}" else="">
                <length string="@{classifiers}" when="greater" length="0" />
            </condition>

            <!-- Remove SNAPSHOT in POM version if necessary -->
            <condition property="pomVersion" value="${maven.version.number}-SNAPSHOT" else="${maven.version.number}">
                <istrue value="${maven.isRelease}" />
            </condition>
            <replace file="@{pomFile}" summary="true" token="${pomVersion}" value="${maven.version.number}" >
                <filename name="@{pomFile}"/>
            </replace>

            <artifact:mvn mavenVersion="3.0.3">
                <arg value="${maven.command}"/>
                <arg value="-Dfile=${fileabsolute}"/>
                <arg value="-DgroupId=${maven.group.id}"/>
                <arg value="-DartifactId=@{artifactId}"/>
                <arg value="-Dversion=${maven.version.number}"/>
                <arg value="-Dpackaging=${extension}"/>
                <arg value="-DpomFile=@{pomFile}"/>
                <arg value="-Durl=${maven.repo.url}"/>
                <arg value="-DrepositoryId=${maven.repo.id}"/>
                <arg value="-s"/>
                <arg value="${maven.settings.file}"/>
                <arg line="${sideArtifacts}"/>
                <arg value="-N"/>
            </artifact:mvn>

            <!-- Revert change in pom done above -->
            <replace file="@{pomFile}" summary="true" token="${maven.version.number}" value="${pomVersion}" />
        </sequential>
    </macrodef>

    <target name="mvninstall" depends="build-config-artifacts"
       description="Installs built artifacts into the local Maven repository">
        <path id="maven-ant-tasks.classpath" path="projects/3rd-party/lib/devenv/maven-ant-tasks-2.1.3.jar" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml"  uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />

        <!-- Copy all pom files -->
        <copy file="pom.xml" todir="build" overwrite="true"/>
        <copy todir="." overwrite="true">
            <fileset dir="." includes="projects/*/pom.xml"/>
            <fileset dir="." includes="enterpriseprojects/*/pom.xml"/>
            <fileset dir="." includes="modules/*/*/pom.xml"/>
            <globmapper from="*/pom.xml" to="*/build/pom.xml" handledirsep="yes"/>
        </copy>

        <!-- Replace version in them -->
        <property name="maven.version.before" value="4.2.d-SNAPSHOT"/>
        <property name="maven.version.after" value="4.2.0-QA-SNAPSHOT"/>
        <replace dir="." token="${maven.version.before}" value="${maven.version.after}" summary="true">
            <include name="build/pom.xml" />
            <include name="projects/*/build/pom.xml" />
            <include name="enterpriseprojects/*/build/pom.xml" />
            <include name="modules/*/*/build/pom.xml" />
        </replace>

        <!-- install the whole lot -->
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=build/pom.xml" />
            <arg value="-DpomFile=build/pom.xml" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/core/build/dist/alfresco-core-4.2.0.jar" />
            <arg value="-DpomFile=projects/core/build/pom.xml" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-core-config.zip" />
            <arg value="-DpomFile=projects/core/build/pom.xml" />
            <arg value="-Dclassifier=config" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-core-sources.zip" />
            <arg value="-DpomFile=projects/core/build/pom.xml" />
            <arg value="-Dclassifier=sources" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/data-model/build/dist/alfresco-data-model-4.2.0.jar" />
            <arg value="-DpomFile=projects/data-model/build/pom.xml" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-datamodel-config.zip" />
            <arg value="-DpomFile=projects/data-model/build/pom.xml" />
            <arg value="-Dclassifier=config" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-datamodel-sources.zip" />
            <arg value="-DpomFile=projects/data-model/build/pom.xml" />
            <arg value="-Dclassifier=sources" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/deployment/build/dist/alfresco-deployment-4.2.0.jar" />
            <arg value="-DpomFile=projects/deployment/build/pom.xml" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-deployment-sources.zip" />
            <arg value="-DpomFile=projects/deployment/build/pom.xml" />
            <arg value="-Dclassifier=sources" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/alfresco-jlan/build/dist/alfresco-jlan-embed-4.2.0.jar" />
            <arg value="-DpomFile=projects/alfresco-jlan/build/pom.xml" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-jlan-embed-sources.zip" />
            <arg value="-DpomFile=projects/alfresco-jlan/build/pom.xml" />
            <arg value="-Dclassifier=sources" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/mbeans/build/dist/alfresco-mbeans-4.2.0.jar" />
            <arg value="-DpomFile=projects/mbeans/build/pom.xml" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/remote-api/build/dist/alfresco-remote-api-4.2.0.jar" />
            <arg value="-DpomFile=projects/remote-api/build/pom.xml" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/remote-api/build/dist/alfresco-remote-api-4.2.0-test.jar" />
            <arg value="-DpomFile=projects/remote-api/build/pom.xml" />
            <arg value="-Dclassifier=tests" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-remote-api-config.zip" />
            <arg value="-DpomFile=projects/remote-api/build/pom.xml" />
            <arg value="-Dclassifier=config" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-remote-api-sources.zip" />
            <arg value="-DpomFile=projects/remote-api/build/pom.xml" />
            <arg value="-Dclassifier=sources" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/repository/build/dist/alfresco-repository-4.2.0.jar" />
            <arg value="-DpomFile=projects/repository/build/pom.xml" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-repository-config.zip" />
            <arg value="-DpomFile=projects/repository/build/pom.xml" />
            <arg value="-Dclassifier=config" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-repository-test-resources.zip" />
            <arg value="-DpomFile=projects/repository/build/pom.xml" />
            <arg value="-Dclassifier=test-resources" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-repository-sources.zip" />
            <arg value="-DpomFile=projects/repository/build/pom.xml" />
            <arg value="-Dclassifier=sources" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/web-framework-commons/build/dist/alfresco-web-framework-commons-4.2.0.jar" />
            <arg value="-DpomFile=projects/web-framework-commons/build/pom.xml" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-web-framework-commons-sources.zip" />
            <arg value="-DpomFile=projects/web-framework-commons/build/pom.xml" />
            <arg value="-Dclassifier=sources" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/web-client/build/dist/alfresco.war" />
            <arg value="-DpomFile=projects/web-client/build/pom.xml" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-web-client-config.zip" />
            <arg value="-DpomFile=projects/web-client/build/pom.xml" />
            <arg value="-Dclassifier=config" />
            <arg value="-Dpackaging=jar" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/web-client/build/dist/alfresco-web-client-4.2.0.jar" />
            <arg value="-DpomFile=projects/web-client/build/pom.xml" />
            <arg value="-Dclassifier=classes" />
            <arg value="-Dpackaging=jar" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-web-client-sources.zip" />
            <arg value="-DpomFile=projects/web-client/build/pom.xml" />
            <arg value="-Dclassifier=sources" />
            <arg value="-Dpackaging=jar" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/slingshot/build/dist/share.war" />
            <arg value="-DpomFile=projects/slingshot/build/pom.xml" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-share-config.zip" />
            <arg value="-DpomFile=projects/slingshot/build/pom.xml" />
            <arg value="-Dclassifier=config" />
            <arg value="-Dpackaging=jar" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/slingshot/build/dist/alfresco-share-4.2.0.jar" />
            <arg value="-DpomFile=projects/slingshot/build/pom.xml" />
            <arg value="-Dclassifier=classes" />
            <arg value="-Dpackaging=jar" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-share-sources.zip" />
            <arg value="-DpomFile=projects/slingshot/build/pom.xml" />
            <arg value="-Dclassifier=sources" />
            <arg value="-Dpackaging=jar" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=enterpriseprojects/repository/build/dist/alfresco-enterprise-repo-4.2.0.jar" />
            <arg value="-DpomFile=enterpriseprojects/repository/build/pom.xml" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-enterprise-repository-config.zip" />
            <arg value="-DpomFile=enterpriseprojects/repository/build/pom.xml" />
            <arg value="-Dclassifier=config" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-enterprise-repository-sources.zip" />
            <arg value="-DpomFile=enterpriseprojects/repository/build/pom.xml" />
            <arg value="-Dclassifier=sources" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=enterpriseprojects/remote-api/build/dist/alfresco-enterprise-remote-api-4.2.0.jar" />
            <arg value="-DpomFile=enterpriseprojects/remote-api/build/pom.xml" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-enterprise-remote-api-config.zip" />
            <arg value="-DpomFile=enterpriseprojects/remote-api/build/pom.xml" />
            <arg value="-Dclassifier=config" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-enterprise-remote-api-sources.zip" />
            <arg value="-DpomFile=enterpriseprojects/remote-api/build/pom.xml" />
            <arg value="-Dclassifier=sources" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=modules/sharepoint/amp/build/dist/alfresco-vti-4.2.0.jar" />
            <arg value="-DpomFile=modules/sharepoint/amp/build/pom.xml" />
            <arg value="-Dclassifier=classes" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=modules/sharepoint/amp/build/dist/alfresco-vti-4.2.0-config.jar" />
            <arg value="-DpomFile=modules/sharepoint/amp/build/pom.xml" />
            <arg value="-Dclassifier=config" />
        </artifact:mvn>
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=${dir.assemble.config}/alfresco-vti-sources.zip" />
            <arg value="-DpomFile=modules/sharepoint/amp/build/pom.xml" />
            <arg value="-Dclassifier=sources" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-install-plugin:2.4:install-file" />
            <arg value="-Dfile=projects/wdr-deployment/build/dist/alfresco-wdr-deployment.jar" />
            <arg value="-DpomFile=projects/wdr-deployment/build/pom.xml" />
        </artifact:mvn>
    </target>
</project>
