<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>qa-share</artifactId>
    <prerequisites>
        <maven>3.0.4</maven>
    </prerequisites>
    <parent>
        <artifactId>alfresco-parent</artifactId>
        <groupId>org.alfresco</groupId>
        <version>5.0.0-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <properties>
        <webdrone.version>2.6</webdrone.version>
        <share-po.version>${project.version}</share-po.version>
        <office.component>libreofficecomponent</office.component>
        <enable.hybrid>false</enable.hybrid>
        <hybrid.url>https://myalf676a.alfresco.me/alfresco/a/{network}/</hybrid.url>
        <uniqueTestRunName>TestReports</uniqueTestRunName>
        <!-- Default suite allows a single test to be run via -Dtest=... in this case the suite will be ignored then anyway -->
        <testng.xml>src/test/resources/tests_debug.xml</testng.xml>
    </properties>

    <repositories>
        <repository>
            <id>alfresco-public-snapshot</id>
            <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots/</url>
        </repository>
    </repositories>
    <distributionManagement>
        <repository>
            <id>alfresco-internal</id>
            <name>Alfresco Releases Repository</name>
            <url>https://artifacts.alfresco.com/nexus/content/repositories/internal-releases</url>
        </repository>
        <snapshotRepository>
            <id>alfresco-internal-snapshots</id>
            <name>Alfresco Snapshots Repository</name>
            <url>https://artifacts.alfresco.com/nexus/content/repositories/internal-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <dependencies>
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>ldtp-client-apps</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.2</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.2</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>share-po</artifactId>
            <version>${share-po.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>webdrone</artifactId>
            <version>${webdrone.version}</version>
        </dependency>
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-benchmark-util</artifactId>
            <version>1.2.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>   
        <dependency>
                <groupId>org.alfresco.services</groupId>
	        <artifactId>alfresco-events</artifactId>
                <version>1.2</version>
        </dependency>      
        <dependency>
	        <groupId>org.apache.camel</groupId>
	        <artifactId>camel-core</artifactId>
	        <version>2.12.0</version>
        </dependency>        
	        <dependency>
	            <groupId>org.apache.activemq</groupId>
	            <artifactId>activemq-client</artifactId>
	            <version>5.9.0</version>
	            <exclusions>
	                <exclusion>
	                    <groupId>org.slf4j</groupId>
	                    <artifactId>slf4j-api</artifactId>
	                </exclusion>
	                <exclusion>
	                    <groupId>org.slf4j</groupId>
	                    <artifactId>slf4j-log4j12</artifactId>
	                </exclusion>
	            </exclusions>
	        </dependency>
	        <dependency>
	            <groupId>org.apache.activemq</groupId>
	            <artifactId>activemq-broker</artifactId>
	            <version>5.9.0</version>
	        </dependency>
	        <dependency>
	            <groupId>org.apache.activemq</groupId>
	            <artifactId>activemq-camel</artifactId>
	            <version>5.9.0</version>
	            <exclusions>
	                <exclusion>
	                    <groupId>org.springframework</groupId>
	                    <artifactId>spring-beans</artifactId>
	                </exclusion>
	                <exclusion>
	                    <groupId>commons-logging</groupId>
	                    <artifactId>commons-logging</artifactId>
	                </exclusion>
	                <exclusion>
	                    <groupId>commons-pool</groupId>
	                    <artifactId>commons-pool</artifactId>
	                </exclusion>
	                <exclusion>
	                    <groupId>org.slf4j</groupId>
	                    <artifactId>slf4j-api</artifactId>
	                </exclusion>
	                <exclusion>
	                    <groupId>org.slf4j</groupId>
	                    <artifactId>slf4j-log4j12</artifactId>
	                </exclusion>
	            </exclusions>
	        </dependency>
	        <dependency>
	            <groupId>org.apache.activemq</groupId>
	            <artifactId>activemq-amqp</artifactId>
	            <version>5.9.0</version>
	            <exclusions>
	                <exclusion>
	                    <groupId>org.slf4j</groupId>
	                    <artifactId>slf4j-api</artifactId>
	                </exclusion>
	                <exclusion>
	                    <groupId>org.slf4j</groupId>
	                    <artifactId>slf4j-log4j12</artifactId>
	                </exclusion>
	            </exclusions>
	        </dependency>
	        <dependency>
	            <groupId>org.apache.activemq</groupId>
	            <artifactId>activemq-pool</artifactId>
	            <version>5.9.0</version>
	            <exclusions>
	                <exclusion>
	                    <groupId>org.slf4j</groupId>
	                    <artifactId>slf4j-api</artifactId>
	                </exclusion>
	                <exclusion>
	                    <groupId>org.slf4j</groupId>
	                    <artifactId>slf4j-log4j12</artifactId>
	                </exclusion>
	            </exclusions>
	        </dependency>
        
        <!-- Selenium -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>2.39.0</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8.8</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>14.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${dependency.spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${dependency.spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-remote-api</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>share-po</artifactId>
            <version>${share-po.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-remote-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.uncommons</groupId>
            <artifactId>reportng</artifactId>
            <version>1.1.4</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.jackrabbit</groupId>
            <artifactId>jackrabbit-webdav</artifactId>
            <version>2.8.0</version>
        </dependency>
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.51</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.7.2</version>
        </dependency>
        <dependency>
            <groupId>org.samba.jcifs</groupId>
            <artifactId>jcifs</artifactId>
            <version>1.3.3</version>
        </dependency>
        <dependency>
            <groupId>com.google.apis</groupId>
            <artifactId>google-api-services-drive</artifactId>
            <version>v2-rev139-1.19.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.http-client</groupId>
            <artifactId>google-http-client-jackson</artifactId>
            <version>1.16.0-rc</version>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
            <version>6.1.25</version>
        </dependency>
        <dependency>
            <groupId>net.lightbody.bmp</groupId>
            <artifactId>browsermob-proxy</artifactId>
            <version>2.0-beta-8</version>
            <exclusions>
                <exclusion>
                    <groupId>org.seleniumhq.selenium</groupId>
                    <artifactId>selenium-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpmime</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <build>
        <directory>target/${uniqueTestRunName}</directory>
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>${testng.xml}</suiteXmlFile>
                        <!-- suiteXmlFile>src/test/resources/qa-share-testng.xml</suiteXmlFile -->
                        <!-- suiteXmlFile>src/test/resources/qa-download-testng.xml</suiteXmlFile -->
                    </suiteXmlFiles>
                    <runOrder>alphabetical</runOrder>
                    <argLine>-Xms512m -Xmx1024m</argLine>
                    <workingDirectory>${basedir}</workingDirectory>
                    <redirectTestOutputToFile>false</redirectTestOutputToFile>
                    <parallel>classes</parallel>
                    <systemPropertyVariables>
                        <webdrone.max.waitTime>${webdrone.max.waitTime}</webdrone.max.waitTime>
                    </systemPropertyVariables>
                    <!-- Setting properties for test execution -->
                    <properties>
                        <!-- Setting ReportNG listeners -->
                        <property>
                            <name>listener</name>
                            <value>org.alfresco.webdrone.testng.listener.ScreenshotHTMLReporter</value>
                        </property>
                    </properties>
                </configuration>
            </plugin>

            <plugin>
                <!-- Configuration triggered by mvn antrun:run, used by Bamboo to stop
                    server -->
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <target>
                                <echo>Stopping Alfresco...</echo>
                                <exec executable="${basedir}/target/alf-installation/alfresco.sh"
                                      dir="target/alf-installation" failonerror="true">
                                    <arg value="stop"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>install-alfresco</id>
            <build>
                <plugins>
                    <!-- Download and install the specified build of enterprise alfresco installer -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>fetch-installer</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>Recreating database...</echo>
                                        <sql driver="org.postgresql.Driver" url="jdbc:postgresql:template1" userid="alfresco" password="alfresco"
                                             autocommit="true">drop database if exists alfresco; create database alfresco
                                        </sql>
                                        <echo>Downloading Alfresco installer...</echo>
                                        <sshexec username="tomcat" host="pbld01.alfresco.com" keyfile="${user.home}/.ssh/id_rsa" outputproperty="installerPath"
                                                 command="ls -rt /data/bamboo/artifacts/${enterprise.installer.version}/ALL/alfresco-enterprise-*-installer-linux-x64.??? | tail -1 | tr ' ' '?' "/>
                                        <scp remoteFile="tomcat@pbld01.alfresco.com:${installerPath}" localTofile="target/alf-installer.bin"
                                             keyfile="${user.home}/.ssh/id_rsa"/>

                                        <chmod file="target/alf-installer.bin" perm="a+x" verbose="true"/>
                                        <echo>Installing Alfresco...</echo>
                                        <exec executable="${basedir}/target/alf-installer.bin" dir="target" failonerror="true">
                                            <arg line="--mode unattended --alfresco_admin_password admin --disable-components postgres,alfrescowcmqs --jdbc_username alfresco --jdbc_password alfresco --prefix ${basedir}/target/alf-installation --tomcat_server_domain ${HOSTNAME}"/>
                                        </exec>
                                        <echo>Add custom properties to solrcore.properties</echo>
                                                <propertyfile file="${basedir}/target/alf-installation/solr4/workspace-SpacesStore/conf/solrcore.properties"
                                                              comment="Patched by auto-scripts">
                                                    <entry key="alfresco.cron" value="0/3 * * * * ? *"/>
                                                </propertyfile>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.ant</groupId>
                                <artifactId>ant-jsch</artifactId>
                                <version>1.8.2</version>
                            </dependency>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${dependency.postgresql.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>run-alfresco</id>
            <build>
                <plugins>
                    <!-- Fetch JaCoCo agent and set the argLine property accordingly -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.6.3.201306030806</version>
                        <executions>
                            <execution>
                                <id>prepare-jacoco</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <includes>
                                <include>org.alfresco.*</include>
                            </includes>
                        </configuration>
                    </plugin>

                    <!-- Starts/stop the installed Alfresco -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-alfresco</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>Starting Alfresco...</echo>
                                        <exec executable="${basedir}/target/alf-installation/alfresco.sh" dir="target/alf-installation" failonerror="true">
                                            <arg value="start"/>
                                            <env key="CATALINA_OPTS" value="${argLine}"/>
                                        </exec>
                                        <sleep minutes="5"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-alfresco</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>Stopping Alfresco...</echo>
                                        <exec executable="${basedir}/target/alf-installation/alfresco.sh" dir="target/alf-installation" failonerror="true">
                                            <arg value="stop"/>
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>enable-hybrid</id>
            <activation>
                <property>
                    <name>enable.hybrid</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Enable hybrid in the installation -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>modify-properties</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <property name="alf.prop" location="target/alf-installation/tomcat/shared/classes/alfresco-global.properties"/>
                                        <echo append="true" output="${alf.prop}"/>
                                        <echo append="true" output="${alf.prop}">
                                            # Enabling hybrid in the installation - automatically added by the build
                                            hybridworkflow.enabled=true
                                            sync.cloud.url=${hybrid.url}
                                            system.serverMode=PRODUCTION
                                        </echo>
                                        <echo append="true" output="${alf.prop}"/>
                                        <copy failonerror="false" verbose="true"
                                              todir="target/alf-installation/tomcat/shared/classes/alfresco/extension/license"
                                              file="${user.home}/binaries/build-classpath/5.0/Enterprise-5.0.lic"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
         <id>install-pentaho-alfresco</id>
         <build>
            <plugins>
               <!-- Download and install the latest enterprise alfresco installer -->
               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>fetch-installer</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                           <goal>run</goal>
                        </goals>
                        <configuration>
                           <target>
                              <echo>Recreating database...</echo>
                              <sql driver="org.postgresql.Driver" url="jdbc:postgresql:template1" userid="alfresco" password="alfresco" autocommit="true">drop database if exists alfresco; create database alfresco</sql>
                              <echo>Downloading Pentaho Installer...</echo>
                              <sshexec username="tomcat" host="pbld01.alfresco.com" keyfile="${user.home}/.ssh/id_rsa" outputproperty="installerPath" command="ls -rt /bamboo/artifacts/INTEGRATIONS-PENTAHO/JOB1/build*/PentahoDistribution/alfresco-reporting-*.zip | tail -1 | tr ' ' '?' " />
                              <scp remoteFile="tomcat@pbld01.alfresco.com:${installerPath}" localTofile="target/alfresco-reporting.zip" keyfile="${user.home}/.ssh/id_rsa" />
                              <chmod file="target/alfresco-reporting.zip" perm="a+x" verbose="true" />
                              <echo>Unzip the Alfresco Reporting...</echo>
                              <unpack artifact="${basedir}/target/alfresco-reporting.zip" outputDirectory="${basedir}/target" silent="true" />
                              <chmod file="${basedir}/target/alfresco-reporting/activemq/bin/activemq" perm="a+x" verbose="true" />
                              <chmod file="${basedir}/target/alfresco-reporting/ba-server/*.sh" perm="a+x" verbose="true" />
                              <chmod file="${basedir}/target/alfresco-reporting/ba-server/tomcat/bin/*.sh" perm="a+x" verbose="true" />
                              
                              <echo>Downloading Alfresco installer...</echo>
                              <sshexec username="tomcat" host="pbld01.alfresco.com" keyfile="${user.home}/.ssh/id_rsa" outputproperty="installerPath" command="ls -rt /data/nightlybuilds/Enterprise?${enterprise.installer.version}/build*/ALL/alfresco-enterprise-*-installer-linux-x64.??? | tail -1 | tr ' ' '?' " />
                              <scp remoteFile="tomcat@pbld01.alfresco.com:${installerPath}" localTofile="target/alf-installer.bin" keyfile="${user.home}/.ssh/id_rsa" />
                              <chmod file="target/alf-installer.bin" perm="a+x" verbose="true" />
                              <echo>Installing Alfresco...</echo>
                              <exec executable="${basedir}/target/alf-installer.bin" dir="target" failonerror="true">
                                 <arg line="--mode unattended --alfresco_admin_password admin --disable-components postgres,alfrescowcmqs --jdbc_username alfresco --jdbc_password alfresco --prefix ${basedir}/target/alf-installation" />
                              </exec>
                              <echo></echo>
                           </target>
                        </configuration>
                     </execution>
                  </executions>
                  <dependencies>
                     <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-jsch</artifactId>
                        <version>1.8.2</version>
                     </dependency>
                     <dependency>
                        <groupId>postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>9.1-901-1.jdbc4</version>
                     </dependency>
                  </dependencies>
               </plugin>
               <plugin>
               <artifactId>exec-maven-plugin</artifactId>
                    <groupId>org.codehaus.mojo</groupId>
                    <executions>
                        <execution><!-- Run our version calculation script -->
                            <id>Version Calculation</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>${basedir}/target/alfresco-reporting/ba-server/data/mysql5/create_*.sql | mysql -u alfresco --password=alfresco</executable>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>modify-properties</id>
                            <phase>generate-test-resources</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <target>
                                    <property name="alf.prop"
                                        location="target/alf-installation/tomcat/shared/classes/alfresco-global.properties" />
                                    <echo append="true" output="${alf.prop}" />
                                    <echo append="true" output="${alf.prop}">
                                        # Adding Pentaho Messaging and Event Sub Systems - automatically
                                        added by the build
                                        messaging.broker.url=failover:(tcp://localhost:61616)?timeout=3000
                                        messaging.subsystem.autoStart=true
                                        events.subsystem.autoStart=true
                                        pentaho.ba-server.url=http://alfrescora.my.com/pentaho/
                                    </echo>
                                    <echo append="true" output="${alf.prop}" />
                                    <copy failonerror="false" verbose="true"
                                        todir="target/alf-installation/tomcat/shared/classes/alfresco/extension/license"
                                        file="${user.home}/binaries/build-classpath/4.3/WEB-INF/alfresco/license/Enterprise43-All.lic" />
                                </target>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
               <plugin>
                  <groupId>org.alfresco.maven.plugin</groupId>
                  <artifactId>alfresco-maven-plugin</artifactId>
                  <extensions>true</extensions>
                  <executions>
                     <execution>
                        <id>install-server-amp</id>
                        <goals>
                           <goal>install</goal>
                        </goals>
                        <phase>process-test-resources</phase>
                        <configuration>
                           <backup>true</backup>
                           <ampLocation>${basedir}/target/alfresco-reporting/amps/pentaho-repo.amp</ampLocation>
                           <warLocation>${project.build.directory}/alf-installation/tomcat/webapps/alfresco.war</warLocation>
                           <classifier>amp</classifier>
                        </configuration>
                     </execution>
                     <execution>
                        <id>install-share-amp</id>
                        <goals>
                           <goal>install</goal>
                        </goals>
                        <phase>process-test-resources</phase>
                        <configuration>
                           <backup>true</backup>
                           <ampLocation>${basedir}/target/alfresco-reporting/amps/pentaho-share.amp</ampLocation>
                           <warLocation>${project.build.directory}/alf-installation/tomcat/webapps/share.war</warLocation>
                           <classifier>amp</classifier>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>fetch-installer</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                           <goal>run</goal>
                        </goals>
                        <configuration>
                           <target>
                              <echo>Start ActiveMQ</echo>
                              <exec executable="${basedir}/target/alfresco-reporting/activemq/bin/activemq" failonerror="true" />
                              <echo>Start Message Listener</echo>
                              
                              <echo></echo>
                           </target>
                        </configuration>
                     </execution>
                  </executions>
                  <dependencies>
                     <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-jsch</artifactId>
                        <version>1.8.2</version>
                     </dependency>
                     <dependency>
                        <groupId>postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>9.1-901-1.jdbc4</version>
                     </dependency>
                  </dependencies>
               </plugin>
            </plugins>
         </build>
      </profile>
    </profiles>

</project>
