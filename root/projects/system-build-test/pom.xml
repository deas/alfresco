<!-- ****************************************************** -->
<!-- ** Experimental Maven build - use at your own risk! ** -->
<!-- ****************************************************** -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <artifactId>alfresco-system-test</artifactId>
   <name>Alfresco System Build Test</name>
   <parent>
      <artifactId>alfresco-parent</artifactId>
      <groupId>org.alfresco</groupId>
        <version>4.3.0-SNAPSHOT</version>
      <relativePath>../../pom.xml</relativePath>
   </parent>
   <properties>
      <alfresco.solr.dir>${project.build.directory}/solr_home</alfresco.solr.dir>
      <solr.version>4.3.0-SNAPSHOT</solr.version>
      <alfresco.war.artifact>alfresco</alfresco.war.artifact>
      <db.skip>false</db.skip>
      <!-- To run the tests type: mvn clean integration-test-->
      <!-- optionally you could us a -Ph2 profile -->
   </properties>
   <dependencies>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>alfresco-solr</artifactId>
         <version>${solr.version}</version>
         <classifier>classes</classifier>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>alfresco-web-service-client</artifactId>
         <version>${project.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>alfresco-solr</artifactId>
         <version>${solr.version}</version>
         <classifier>tests</classifier>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>alfresco-remote-api</artifactId>
         <version>${project.version}</version>
         <classifier>tests</classifier>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>alfresco-web-service-client</artifactId>
         <version>${project.version}</version>
         <classifier>tests</classifier>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>
   <build>
      <resources>
         <resource>
            <!-- config/alfresco gets added to the Alfresco.war -->
            <!-- config/tomcat is used by tomcat -->
            <directory>config</directory>
         </resource>
      </resources>
      <testResources>
         <testResource>
            <directory>keystore</directory>
         </testResource>
      </testResources>
      <plugins>
         <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <executions>
               <execution>
                  <id>default-test</id>
                  <configuration>
                     <skip>true</skip>
                  </configuration>
               </execution>
               <execution>
                  <id>integration-tests</id>
                  <phase>integration-test</phase>
                  <goals>
                     <goal>test</goal>
                  </goals>
                  <configuration>
                     <includes>
                        <!-- Include integration tests within integration-test phase -->
                        <include>**/*TestSuite.*</include>
                     </includes>
                     <parallel>classes</parallel>
                     <forkMode>perthread</forkMode>
                     <reuseForks>true</reuseForks>
                     <threadCount>4</threadCount>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>unpack-solr-home</id>
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <phase>generate-test-resources</phase>
                  <configuration>
                     <outputDirectory>${alfresco.solr.dir}</outputDirectory>
                     <artifactItems>
                        <artifactItem>
                           <artifactId>alfresco-solr</artifactId>
                           <groupId>org.alfresco</groupId>
                           <version>${solr.version}</version>
                           <classifier>config</classifier>
                        </artifactItem>
                     </artifactItems>
                  </configuration>
               </execution>
               <execution>
                  <id>unpack-alfresco-war</id>
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <phase>generate-test-resources</phase>
                  <configuration>
                     <outputDirectory>${project.build.directory}/alfresco-war</outputDirectory>
                     <artifactItems>
                        <artifactItem>
                           <groupId>org.alfresco</groupId>
                           <artifactId>${alfresco.war.artifact}</artifactId>
                           <version>${project.version}</version>
                           <type>war</type>
                        </artifactItem>
                     </artifactItems>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>com.google.code.maven-replacer-plugin</groupId>
            <artifactId>replacer</artifactId>
            <executions>
               <execution>
                  <id>configure-solr-log4j</id>
                  <phase>generate-test-resources</phase>
                  <goals>
                     <goal>replace</goal>
                  </goals>
                  <configuration>
                     <ignoreErrors>true</ignoreErrors>
                     <file>${alfresco.solr.dir}/log4j-solr.properties</file>
                     <replacements>
                        <replacement>
                           <token>solr.log</token>
                           <value>${project.build.directory}/solr_tomcat.log</value>
                        </replacement>
                        <replacement>
                           <token>WARN, Console</token>
                           <value>DEBUG</value>
                        </replacement>
                     </replacements>
                  </configuration>
               </execution>
               <execution>
                  <id>configure-solr-workspace-SpacesStore</id>
                  <phase>generate-test-resources</phase>
                  <goals>
                     <goal>replace</goal>
                  </goals>
                  <configuration>
                     <ignoreErrors>true</ignoreErrors>
                     <file>${alfresco.solr.dir}/workspace-SpacesStore/conf/solrcore.properties</file>
                     <replacements>
                        <replacement>
                           <token>@@ALFRESCO_SOLR_DIR@@</token>
                           <value>${project.build.directory}/alf_test_data</value>
                        </replacement>
                     </replacements>
                  </configuration>
               </execution>
               <execution>
                  <id>configure-solr-archive-SpacesStore</id>
                  <phase>generate-test-resources</phase>
                  <goals>
                     <goal>replace</goal>
                  </goals>
                  <configuration>
                     <ignoreErrors>true</ignoreErrors>
                     <file>${alfresco.solr.dir}/archive-SpacesStore/conf/solrcore.properties</file>
                     <replacements>
                        <replacement>
                           <token>@@ALFRESCO_SOLR_DIR@@</token>
                           <value>${project.build.directory}/alf_test_data</value>
                        </replacement>
                     </replacements>
                  </configuration>
               </execution>
               <execution>
                  <id>configure-solr-config</id>
                  <phase>generate-test-resources</phase>
                  <goals>
                     <goal>replace</goal>
                  </goals>
                  <configuration>
                     <ignoreErrors>true</ignoreErrors>
                     <file>${project.build.outputDirectory}/tomcat/solr.xml</file>
                     <replacements>
                        <replacement>
                           <token>@@DOCBASE@@</token>
                           <value>${project.build.directory}/tomcat/webapps/alfresco-solr</value>
                        </replacement>
                        <replacement>
                           <token>@@ALFRESCO_SOLR_DIR@@</token>
                           <value>${alfresco.solr.dir}</value>
                        </replacement>
                     </replacements>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
               <execution>
                  <!-- Take the files that were in config directory and add 
                     them to the Alfresco.war classpath -->
                  <id>copy-extra-classpath-resources</id>
                  <phase>generate-test-resources</phase>
                  <goals>
                     <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/alfresco-war/WEB-INF/classes</outputDirectory>
                     <resources>
                        <resource>
                           <directory>${project.build.outputDirectory}</directory>
                           <filtering>true</filtering>
                           <excludes>
                              <exclude>tomcat/*</exclude>
                           </excludes>
                        </resource>
                     </resources>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <!-- Wipe the database before starting tests -->
<!--          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>wipe-database</id>
                  <phase>process-test-resources</phase>
                  <goals>
                     <goal>execute</goal>
                  </goals>
                  <configuration>
                     <sqlCommand>drop database if exists alfresco</sqlCommand>
                  </configuration>
               </execution>
               <execution>
                  <id>create-database</id>
                  <phase>process-test-resources</phase>
                  <goals>
                     <goal>execute</goal>
                  </goals>
                  <configuration>
                     <sqlCommand>create database alfresco</sqlCommand>
                  </configuration>
               </execution>
            </executions>
         </plugin> -->
         <plugin>
            <!-- Starts up tomcat before running the tests, and shuts it down after -->
            <!-- If you would like to keep tomcat running so you can run your tests from
            eclipse, then comment out the stop-tomcat execution and the <fork>true</fork> -->
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>start-tomcat</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                     <goal>run-war-only</goal>
                  </goals>
                  <configuration>
                     <fork>true</fork>
                  </configuration>
               </execution>
               <execution>
                  <id>stop-tomcat</id>
                  <phase>post-integration-test</phase>
                  <goals>
                     <goal>shutdown</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <!-- The unpacked Alfresco war. -->
               <warDirectory>${project.build.directory}/alfresco-war</warDirectory>
               <path>/alfresco</path>
               <additionalConfigFilesDir>${project.build.outputDirectory}/tomcat</additionalConfigFilesDir>
               <httpsPort>8443</httpsPort>
               <keystoreFile>${project.build.directory}/test-classes/ssl.keystore</keystoreFile>
               <keystorePass>kT9X6oe68t</keystorePass>
               <keystoreType>JCEKS</keystoreType>
               <truststoreFile>${project.build.directory}/test-classes/ssl.truststore</truststoreFile>
               <truststorePass>kT9X6oe68t</truststorePass>
               <truststoreType>JCEKS</truststoreType>
               <clientAuth>false</clientAuth>
               <systemProperties>
                  <solr.solr.home>${alfresco.solr.dir}</solr.solr.home>
               </systemProperties>
               <!-- Add the solr war to run as an embedded webapp -->
               <webapps>
                  <webapp>
                     <groupId>org.alfresco</groupId>
                     <artifactId>alfresco-solr</artifactId>
                     <version>${solr.version}</version>
                     <type>war</type>
                     <asWebapp>true</asWebapp>
                     <contextPath>solr</contextPath>
                  </webapp>
               </webapps>
            </configuration>
         </plugin>
      </plugins>
   </build>
   <profiles>
      <!-- Profile to build alfresco-enterprise -->
      <profile>
         <id>enterprise</id>
         <properties>
            <!-- Enterprise specific properties -->
            <alfresco.war.artifact>alfresco-enterprise</alfresco.war.artifact>
         </properties>
      </profile>
   </profiles>
</project>
