<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>

<!-- Core and miscellaneous bean definitions -->
<beans>

    <!-- SOLR Tracking   -->
    
    <bean id="search.solrTrackingComponent" class="org.alfresco.repo.solr.SOLRTrackingComponentImpl" init-method="init">
        <property name="permissionService" ref="permissionService"/>
        <property name="dictionaryService" ref="dictionaryService"/>
        <property name="ownableService" ref="ownableService"/>
        <property name="tenantService" ref="tenantService"/>
        <property name="nodeDAO" ref="nodeDAO"/>
        <property name="qnameDAO" ref="qnameDAO"/>
        <property name="solrDAO" ref="solrDAO" />
        <property name="dictionaryDAO" ref="dictionaryDAO" />
        <property name="aclDAO" ref="aclDAO" />
        <property name="enabled">
            <value>${search.solrTrackingSupport.enabled}</value>
        </property>
    </bean>

    <!-- Query Register Component -->

    <bean id="search.queryRegisterComponent" class="org.alfresco.repo.search.QueryRegisterComponentImpl">
        <property name="dictionaryService">
            <ref bean="dictionaryService" />
        </property>
        <property name="namespaceService">
            <ref bean="namespaceService" />
        </property>
        <!-- Query collections should be loaded on demand using this component - once loaded thay are available for use -->
    </bean>
    
    <bean id="search.avmSnapShotTriggeredIndexingMethodInterceptor" class="org.alfresco.repo.search.AVMSnapShotTriggeredIndexingMethodInterceptorImpl">
        <property name="avmService">
            <ref bean="avmService" />
        </property>
        <property name="indexerAndSearcher">
            <ref bean="search.avmLuceneIndexerAndSearcherFactory" />
        </property>
        <property name="enableIndexing">
            <value>true</value>
        </property>
        <property name="defaultMode">
            <value>SYNCHRONOUS</value>
        </property>
        <property name="searchApplicationContextFactory">
             <ref bean="Search" />
        </property>
        <property name="indexingDefinitions">
            <list>
                <value>SYNCHRONOUS:TYPE:STAGING</value>
                <value>UNINDEXED:TYPE:STAGING_PREVIEW</value>
                <value>UNINDEXED:TYPE:AUTHOR</value>
                <value>UNINDEXED:TYPE:AUTHOR_PREVIEW</value>
                <value>UNINDEXED:TYPE:WORKFLOW</value>
                <value>UNINDEXED:TYPE:WORKFLOW_PREVIEW</value>
                <value>UNINDEXED:TYPE:AUTHOR_WORKFLOW</value>
                <value>UNINDEXED:TYPE:AUTHOR_WORKFLOW_PREVIEW</value>
                <value>ASYNCHRONOUS:NAME:avmAsynchronousTest</value>
                <value>SYNCHRONOUS:NAME:.*</value>
            </list>
        </property>
    </bean>
    
    
    <bean id="search.fts.alfresco.switching" class="org.alfresco.repo.search.impl.solr.DbOrIndexSwitchingQueryLanguage" >
	    <property name="factories">
			<list>
			    <ref bean="search.indexerAndSearcherFactory" />
			</list>
        </property>
        <property name="name">
            <value>fts-alfresco</value>
        </property>
        <property name="dbQueryLanguage">
            <ref bean="search.fts.alfresco.db" />
        </property>
        <property name="indexQueryLanguage">
            <ref bean="search.fts.alfresco.index" />
        </property>
        <property name="queryConsistency">
            <value>${solr.query.fts.queryConsistency}</value>
        </property>
    </bean>
    
    <bean id="search.fts.alfresco.db" class="org.alfresco.repo.search.impl.solr.DbAftsQueryLanguage" >
	    <property name="factories">
			<list>
			    <ref bean="search.indexerAndSearcherFactory" />
			</list>
        </property>
        <property name="queryEngine">
            <ref bean="search.dbQueryEngine" />
        </property>
        <property name="dictionaryService">
            <ref bean="dictionaryService" />
        </property>
        <property name="namespaceService">
            <ref bean="namespaceService" />
        </property>
        <property name="optionalPatchApplicationCheckBootstrapBean">
            <ref bean="metadataQueryIndexesCheck" />
        </property>
    </bean>
    
    <bean id="search.dbQueryEngineImpl" class="org.alfresco.repo.search.impl.querymodel.impl.db.DBQueryEngine" >
        <property name="dictionaryService">
            <ref bean="dictionaryService" />
        </property>
        <property name="namespaceService">
            <ref bean="namespaceService" />
        </property>
        <property name="sqlSessionTemplate" ref="repoSqlSessionTemplate"/>
        <property name="qnameDAO" ref="qnameDAO"/>
        <property name="nodeService" ref="nodeService"/>
        <property name="nodeDAO" ref="nodeDAO"/>
        <property name="tenantService" ref="tenantService"/>
    </bean>
   
   <bean id="search.dbQueryEngine" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.repo.search.impl.querymodel.QueryEngine</value>
        </property>
        <property name="target">
            <ref bean="search.dbQueryEngineImpl"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref bean="search.dbQueryEngineSecurity"/>
            </list>
        </property>
    </bean>
   
   <bean id="search.dbQueryEngineSecurity" class="net.sf.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor">
        <property name="authenticationManager"><ref bean="authenticationManager"/></property>
        <property name="accessDecisionManager"><ref bean="accessDecisionManager"/></property>
        <property name="afterInvocationManager"><ref bean="afterInvocationManager"/></property>
        <property name="objectDefinitionSource">
            <value>
               org.alfresco.repo.search.impl.querymodel.QueryEngine.executeQuery=ACL_ALLOW,AFTER_ACL_NODE.sys:base.Read
               org.alfresco.repo.search.impl.querymodel.QueryEngine.getQueryModelFactory=ACL_ALLOW
            </value>
        </property>
    </bean>
   
   
</beans>
